<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>组织 on ukeate的笔记</title>
    <link>https://ukeate.com/docs/architect/manage/organize/</link>
    <description>Recent content in 组织 on ukeate的笔记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 27 Sep 2022 16:27:03 +0800</lastBuildDate>
    <atom:link href="https://ukeate.com/docs/architect/manage/organize/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>人员</title>
      <link>https://ukeate.com/docs/architect/manage/organize/people/</link>
      <pubDate>Wed, 10 Oct 2018 20:12:11 +0800</pubDate>
      <guid>https://ukeate.com/docs/architect/manage/organize/people/</guid>
      <description>&lt;h1 id=&#34;人-事-团队&#34;&gt;&#xA;  人, 事, 团队&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%ba-%e4%ba%8b-%e5%9b%a2%e9%98%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;人&#xA;    业内口碑&#xA;    成分&#xA;        技能，素质，精神&#xA;    行动&#xA;        感性，理性，惯性&#xA;    发展&#xA;        上限&#xA;        下限&#xA;    成本&#xA;        低成本召回&#xA;事&#xA;    知原理&#xA;    是什么，为什么，怎么样，拆解&#xA;    事与团队&#xA;        事造就团队，好团队不一定出好成果&#xA;团队&#xA;    存在合理性&#xA;        有目标，成员能力认可，成员感性认可&#xA;        小精英团队，才能解决问题&#xA;    分配事&#xA;        因特质分配，如稳定，峰值，沟通&#xA;    成果评价&#xA;        产出判断&#xA;        分配利益和荣耀&#xA;        时间和代码量评价不了程序员的工作, 可以匿名互评(口碑)&#xA;    团队提升&#xA;        培训无意义，自觉成长&#xA;    成员&#xA;        项目经理&#xA;        设计&#xA;        开发&#xA;            测试人员&#xA;        运维&#xA;        系统工程师&#xA;            设计、实现产品&#xA;        数据分析师&#xA;        技术总监&#xA;        架构师&#xA;            权衡, 出方案&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;职工&#34;&gt;&#xA;  职工&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%81%8c%e5%b7%a5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;态度&#xA;    把握分寸&#xA;    靠谱(事事有交代)&#xA;    负责(顾全局)&#xA;    主动&#xA;    超出预期&#xA;    负责态度, 提高团队效率，而非自己效率   # 严肃判断&#xA;沟通&#xA;    及早沟通、同步&#xA;    文档 &amp;gt; 邮件 &amp;gt; im &amp;gt; 电话&#xA;        # 即时性相反&#xA;    留响应时间, 同组 -&amp;gt; 跨组 -&amp;gt; 跨部门 -&amp;gt; 跨公司&#xA;    明确通知人时, 邮件, im特殊指定&#xA;文档&#xA;    周报&#xA;    文档简单有计划，为节省向别人解释的时间&#xA;    建设性意见(提选择题)&#xA;    只交“产品”: 背景清晰, 扼要, 完整, 引入独有经验&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;工程师&#34;&gt;&#xA;  工程师&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b7%a5%e7%a8%8b%e5%b8%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;本质&#xA;    解决问题&#xA;普遍问题&#xA;    技能: 工具使用(写工具), 表面学习, 笨办法, 不会读文档, 只会知识迁移&#xA;    设计: 不知经典设计, 不知设计哲学, 不知目的, 无法反应需求, 没有品位, 读不懂设计&#xA;    知识更新: 学不动, 基础差(用二手资料), 无认知体系(认为都是新东西), 重复学习无用知识&#xA;    沟通: 不专业(不用专业名词), 不主动, 不沟通对方, 不抓重点, 思路不连贯, 阅历不足(不会写文档), 不问为什么&#xA;能力&#xA;    特点&#xA;        知识、经验、技能、协作         # (1+天赋)x知识x工程习惯&#xA;        犯错(多做多错)&#xA;    方法&#xA;        抽象                        # 设计就是从升维中拆分和简化&#xA;        沉淀                        # 没有沉淀的学习不好回顾修改, 像没有测试的代码&#xA;        品位&#xA;    优点，缺点                      # 找潜质, 并非此长彼短，是两个维度,有一定抑制作用&#xA;        创造力，纪律&#xA;        勤奋，聪明&#xA;        稳定，峰值&#xA;        深度，速度&#xA;        细节，大局&#xA;开发&#xA;    考虑工作的复用性&#xA;    加入项目，需要可对所有代码修改&#xA;    善用工具&#xA;    自己的事主动跟进&#xA;owner&#xA;    自我负责, 自我驱动, 持续改进&#xA;    能部署, 能手工排查问题，手工修复数据, 开发调试工具, 数据修复工具&#xA;    模块职责单一, 明白当前负责和极限性能&#xA;    能降级, 知道下游调用和降级影响。了解上游依赖和上游降级影响&#xA;    配好log、监控、告警, 告警及时响应&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;架构师&#34;&gt;&#xA;  架构师&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9e%b6%e6%9e%84%e5%b8%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;场景/用例/问题 -&amp;gt; 方案/方案权衡 -&amp;gt; 落地路径&#xA;分级&#xA;    初级&#xA;        代码&#xA;            命名：精确性、简单性、一致性、区别性、业务性&#xA;            逻辑: 缩进、换行&#xA;            代码体积: 行、方法、类&#xA;        抽象能力&#xA;        边界&#xA;    中级&#xA;        流量、并发等&#xA;    高级&#xA;        理解业务核心价值、业务实现方式&#xA;        业务技术支撑方式&#xA;        业务趋势&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;创始人&#34;&gt;&#xA;  创始人&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%9b%e5%a7%8b%e4%ba%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;心态: 平常心&#xA;职责: 找到善于解决问题的人，做好善于定义问题的人&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;艺术家&#34;&gt;&#xA;  艺术家&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%89%ba%e6%9c%af%e5%ae%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h1 id=&#34;岗位&#34;&gt;&#xA;  岗位&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b2%97%e4%bd%8d&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;项目经理(pm, project manager)&#xA;技术经理(tm, technical manager)&#xA;产品设计经理(pdm, product design manager)&#xA;运营经理(pom)&#xA;测试经理(qam)&#xA;客服经理(csm, customer success manager)&#xA;开发组长(tl, team leader)&#xA;架构师(pa)&#xA;开发工程师(de, development engineer)&#xA;数据库管理员(dba, database administrator)&#xA;系统管理员(sa)&#xA;界面设计师(ui, user interface)&#xA;用户体验设计师(ue, user experience)&#xA;产品运营师(po, product operator)&#xA;产品设计师(pd, product designer)&#xA;测试工程师(qa, quality assurance)&#xA;配置管理员(pcm)&#xA;发布员(pb)&#xA;软件过程专员(sqa, software quality assurance)&#xA;运维工程师(sre, site reliability engineer)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;招聘&#34;&gt;&#xA;  招聘&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8b%9b%e8%81%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;双向选择&#xA;精确率&amp;amp;召回率&#xA;方面&#xA;    沟通&#xA;    喜欢技术，逻辑能力, 编码能力, 设计能力&#xA;    基本概念, 边界考虑充足, 进阶答案, 衍生问题的解决&#xA;    是否有自己思考，对自己负责&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
