<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ukeate的笔记</title>
    <link>https://ukeate.com/docs/tool/develop/</link>
    <description>Recent content on ukeate的笔记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://ukeate.com/docs/tool/develop/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Eclipse</title>
      <link>https://ukeate.com/docs/tool/develop/eclipse/</link>
      <pubDate>Thu, 11 Oct 2018 18:33:08 +0800</pubDate>
      <guid>https://ukeate.com/docs/tool/develop/eclipse/</guid>
      <description>&lt;h1 id=&#34;方案&#34;&gt;&#xA;  方案&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%96%b9%e6%a1%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;user library发布&#xA;        项目右键 -&amp;gt; properties -&amp;gt; Deployment Assembly -&amp;gt; add -&amp;gt; javaBuild Path Entries中选择发布包&#xA;tomcat设置发布到外部&#xA;        new server -&amp;gt; 直接finish&#xA;        右键server -&amp;gt; open        &#xA;                修改server location -&amp;gt; use Tomcat installation&#xA;                修改server location -&amp;gt; deploy path为webapps&#xA;                修改TimeOuts -&amp;gt;所有时间为1200&#xA;java版本&#xA;        window -&amp;gt; preferences -&amp;gt; java -&amp;gt; compiler&#xA;        window -&amp;gt; preferences -&amp;gt; java -&amp;gt; installed JREs&#xA;编码&#xA;        general -&amp;gt; workspace&#xA;                Text file encoding&#xA;        general -&amp;gt; content types&#xA;                Text -&amp;gt; java source file &#xA;                        defalt encoding输入UTF-8并点击update&#xA;快捷键&#xA;        general -&amp;gt; editors -&amp;gt; keys&#xA;                content assist                # 代码提示&#xA;                word comletion                # 代码补全&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;插件&#34;&gt;&#xA;  插件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8f%92%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;market place&#xA;        http://www.eclipse.org/mpc/&#xA;        在线网页&#xA;                http://www.eclipse.org/mpc/archive.php&#xA;        在线安装(luna)&#xA;                http://download.eclipse.org/mpc/releases/1.3.0/&#xA;        yum&#xA;                eclipse-mpc&#xA;subclipse&#xA;        yum&#xA;                eclipse-subclipse&#xA;jdt java8 support&#xA;        help -&amp;gt; market place -&amp;gt; find: java 8&#xA;                java 8 support for eclipse &#xA;        在线安装(kepler)&#xA;                http://download.eclipse.org/eclipse/updates/4.3-P-builds/&#xA;                网站&#xA;                        http://wiki.eclipse.org/JDT/Eclipse_Java_8_Support_For_Kepler&#xA;m2e&#xA;        在线&#xA;                http://download.eclipse.org/technology/m2e/releases &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;mvn项目&#34;&gt;&#xA;  mvn项目&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mvn%e9%a1%b9%e7%9b%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;创建web 项目&#xA;        maven project &#xA;                catalog: internal&#xA;                filter:webapp&#xA;                        org.apache.maven.archetypes&#xA;        项目右键 - new -&amp;gt; source folder&#xA;                src/main/java&#xA;                src/main/resources&#xA;                src/test/java&#xA;                src/test/resources&#xA;                        # 可以在navigator中创建, 再:&#xA;                        ## 项目右键 -&amp;gt; buildpath -&amp;gt; configure... -&amp;gt; source -&amp;gt; add folder添加以上4个source folder&#xA;        修改 configure build path -&amp;gt; source 中2个source folder中的output folder&#xA;                src/main/java                target/classes&#xA;                src/main/resources        target/classes&#xA;                src/test/java                target/test-classes&#xA;                src/test/resources        target/test-classes&#xA;        修改 configure build path -&amp;gt; libraries -&amp;gt; jre system library -&amp;gt; edit&#xA;        右键 -&amp;gt; properties -&amp;gt;java compiler -&amp;gt; 1.8&#xA;        &#xA;&#xA;        项目右键 -&amp;gt; run as -&amp;gt; maven install                #下载依赖包&#xA;        右键 -&amp;gt; properties -&amp;gt; project facets -&amp;gt; convert to faceted from&#xA;                选中 dynamic web module&#xA;                选中 java&#xA;                右边选择runtime&#xA;                下面further configuration available&#xA;                        content directory: src/main/webapp&#xA;                        勾选generate web.xml&#xA;        右键 -&amp;gt; properties -&amp;gt; deployment assembly中配置文件发布路径&#xA;                去掉test的目录&#xA;                添加发布包maven dependencies&#xA;方案&#xA;    修改项目名&#xA;            o-&amp;gt; 修改project名&#xA;            o-&amp;gt; 修改包名与test包名&#xA;            o-&amp;gt; 修改配置文件, 类中的常量, (workspace配置文件[maven项目没有这些文件])                # ctrl + h 全局搜索(替换)&#xA;            o-&amp;gt; mvn clean&#xA;            o-&amp;gt; mvn install&#xA;            o-&amp;gt; preferences -&amp;gt; web project settings -&amp;gt; context root中修改项目名称&#xA;    集成spring&#xA;        pom.xml中添加spring依赖&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;myeclipse&#34;&gt;&#xA;  myEclipse&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#myeclipse&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;假错误（problem view中删掉）&#xA;&#xA;目录结构&#xA;        /Common/中存储的是jar包与配置&#xA;                plugins/存放插件&#xA;                features/存放外观&#xA;        /MyEclipse 10/中&#xA;                dropins/配置自定义插件&#xA;&#xA;调整format一行最大字符数        Java — Code Style — Formatter — Active profile — Edit — Line Wrapping — Maximum line width&#xA;修改，自定义alt + / 模板        包括@anthor 等等        Java — Editor — Templates&#xA;修改编码:window --&amp;gt; General --&amp;gt; Workspace&#xA;                Myeclipse --&amp;gt; files and editors&#xA;忽略校验:右键 --&amp;gt; myeclipse --&amp;gt; exclude from validation&#xA;package Explor 中可以go into  和 up 缩小和扩大显示范围&#xA;&#xA;鼠标右键 --&amp;gt;Run As --&amp;gt; Run Configuration --&amp;gt; Arguments --&amp;gt; Program Arguments 设置运行传入的参数 &#xA;&#xA;new 中可以生成测试文件&#xA;&#xA;window --&amp;gt; preferences --&amp;gt; MyEclipse --&amp;gt; validation --&amp;gt; disableAll 取消验证&#xA;&#xA;Package Explorer中什么也不显示（进入了已经关闭的包时） --&amp;gt; navigator --&amp;gt; open project&#xA;                                                                                        或者{workspaces}\.metadata\.plugins\org.eclipse.ui.workbench\workbench.xml文件中&#xA;                                                                                        搜索&amp;lt;input factoryID=&amp;quot;org.eclipse.ui.internal.model.ResourceFactory&amp;quot;，把path的值改为&amp;quot;/&amp;quot;&#xA;        其它原因：window --&amp;gt; reset perspective&#xA;                        Package Explorer 上的倒三角中：deselect working set&#xA;struts2配置myeclipse编写xml文件时的提示&#xA;        ## 约束文件的相对路径：struts-2.3.15.1\src\core\src\main\resources\struts2.0.dtd&#xA;        ## xml文件中声明的url：http://struts.apache.org/dtds/struts-2.0.dtd&#xA;        ## myeclipse中：window        --&amp;gt; Preferences --&amp;gt; MyEclipse --&amp;gt; XML --&amp;gt; XML Catalog --&amp;gt; XML Catalog Entries 选中User Specified Entries --&amp;gt; 点击add&#xA;        ## Location中关联源码路径,Key Type 选择 URI,Key中写xml文件中声明的url &#xA;改变Package Explorer Vier中包的为分层显示方式：&#xA;        Package Explorer 视窗中 --&amp;gt; 点击倒三角 --&amp;gt; Package Presentation --&amp;gt; hierarchical ：&#xA;        &#xA;导入war文件：&#xA;        新建webPorject --&amp;gt; File===》import==》General中选择Archive File --&amp;gt; Form archive file中选择要导入的项目.war -&amp;gt; 导入&#xA;&#xA;ctrl + shift + t 关联源码快捷键&#xA;                                                &#xA;设置字体：eclipse preference--&amp;gt;Colors and Fonts--&amp;gt;basic--&amp;gt;Text Font--&amp;gt;edit&#xA;&#xA;导入dtd/xsd约束文件:window -&amp;gt; preferences -&amp;gt; XmlCatalog -&amp;gt; add&#xA;        dtd直接导入文件就可以了,xsd要在添加时key的选项中补上文件名&#xA;        &#xA;自定义jar包library目录&#xA;        项目 右键:building path -&amp;gt; addLiber-&amp;gt;user liber配置userLibery右键:building path -&amp;gt; addLiber-&amp;gt;user liber配置userLibery&#xA;                只是作了外部的引用,workspace中没有包，但是别人导入时会搜索同名的userLibery自动进行配置&#xA;改javaee版本    &#xA;        1.修改项目中的javaee包&#xA;        2.项目工程目录/settings/org.eclipse.wst.common.project.facet.core.xml/中修改javaee版本&#xA;&#xA;在线安装svn&#xA;        Help -&amp;gt; install from site(Myeclipse2013) -&amp;gt; add -&amp;gt; url=http://subclipse.tigris.org/update_1.6.x&#xA;        不选择 Subclipse -&amp;gt; Subclipse Integration for Mylyn 3.x , 其它全选&#xA;&#xA;在线安装mylyn&#xA;        同上，url(Myeclipse2013):http://download.eclipse.org/mylyn/snapshots/weekly&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;插件-1&#34;&gt;&#xA;  插件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8f%92%e4%bb%b6-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;myeclipse 2013 安装svn&#xA;        help -&amp;gt; Install from Site -&amp;gt;add&#xA;                name : Svn&#xA;                Location : http://subclipse.tigris.org/update_1.6.x&#xA;                        或&#xA;                        http://subclipse.tigris.org/update&#xA;        下一步&#xA;                不要选择Subclipse选项下的Subclipse Integration for Mylyn 3.x(Optional)&#xA;        一直下一步&#xA;&#xA;本地安装svn插件&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;快捷键&#34;&gt;&#xA;  快捷键&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bf%ab%e6%8d%b7%e9%94%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;alt /&#xA;ctrl shift f&#xA;    # 代码格式化&#xA;alt enter&#xA;    # 补全提示&#xA;f3&#xA;    # 跳转到声明&#xA;f2 显示类或方法的全限定名&#xA;ctrl + h 多文件搜索        &#xA;alt shift s&#xA;alt shift z :surround with &#xA;ctrl /&#xA;ctrl shift /&#xA;F5 F6 F7&#xA;ctrl alt 上下&#xA;alt 上下&#xA;alt shift x j ：运行&#xA;ctrl 1 显示错误红线的处理方法&#xA;ctrl t 显示继承关系&#xA;ctrl 左右 跳过单词&#xA;ctrl 上下滚屏&#xA;ctrl l 定位&#xA;输入时直接点分号就可以跳到最后&#xA;ctrl alt / 写过内容补全&#xA;字符串最后敲回车可以自动加入 + &#39;\n&#39; &amp;quot;&amp;quot;&#xA;ctrl shift T  openType 查找类关系&#xA;ctrl shift R  查找资源文件&#xA;alt shift A 矩形操作&#xA;alt 左右 返回代码上一层，进入代码下一层&#xA;ctrl o 获得outline&#xA;// TODO 标签&#xA;alt + shift + R 重构中的重命名&#xA;ctrl + shift + o 全局导包&#xA;ctrl + shift + m 局部导包&#xA;ctrl + shift + X  改为大写&#xA;ctrl + shift + g  查看方法被谁调用&#xA;ctrl + shift + h  输入类名，查看类继承关系&#xA;命令补全：syso main        alt + /&#xA;代码抽取:        alt + shift + M&#xA;代码自动生成get set                alt + shift +s&#xA;代码自动生成 — 重写equals hashCode  alt + shift + s&#xA;    &#xA;&#xA;Ctrl+1 快速修复(最经典的快捷键,就不用多说了)&#xA;Ctrl+D: 删除当前行 &#xA;Ctrl+Alt+↓ 复制当前行到下一行(复制增加)&#xA;Ctrl+Alt+↑ 复制当前行到上一行(复制增加)&#xA;Alt+↓ 当前行和下面一行交互位置(特别实用,可以省去先剪切,再粘贴了)&#xA;Alt+↑ 当前行和上面一行交互位置(同上)&#xA;Alt+← 前一个编辑的页面&#xA;Alt+→ 下一个编辑的页面(当然是针对上面那条来说了)&#xA;Alt+Enter 显示当前选择资源(工程,or 文件 or文件)的属性&#xA;Shift+Enter 在当前行的下一行插入空行(这时鼠标可以在当前行的任一位置,不一定是最后)&#xA;Shift+Ctrl+Enter 在当前行插入空行(原理同上条)&#xA;Ctrl+Q 定位到最后编辑的地方&#xA;Ctrl+L 定位在某行 (对于程序超过100的人就有福音了)&#xA;Ctrl+M 最大化当前的Edit或View (再按则反之)&#xA;Ctrl+/ 注释当前行,再按则取消注释&#xA;Ctrl+O 快速显示 OutLine&#xA;Ctrl+T 快速显示当前类的继承结构&#xA;Ctrl+W 关闭当前Editer&#xA;Ctrl+K 参照选中的Word快速定位到下一个&#xA;Ctrl+E 快速显示当前Editer的下拉列表(如果当前页面没有显示的用黑体表示)&#xA;Ctrl+/(小键盘) 折叠当前类中的所有代码&#xA;Ctrl+×(小键盘) 展开当前类中的所有代码&#xA;Ctrl+Space 代码助手完成一些代码的插入(但一般和输入法有冲突,可以修改输入法的热键,也可以暂用&#xA;&#xA;Alt+/来代替)&#xA;Ctrl+Shift+E 显示管理当前打开的所有的View的管理器(可以选择关闭,激活等操作)&#xA;Ctrl+J 正向增量查找(按下Ctrl+J后,你所输入的每个字母编辑器都提供快速匹配定位到某个单词,如果没&#xA;&#xA;有,则在stutes line中显示没有找到了,查一个单词时,特别实用,这个功能Idea两年前就有了)&#xA;Ctrl+Shift+J 反向增量查找(和上条相同,只不过是从后往前查)&#xA;Ctrl+Shift+F4 关闭所有打开的Editer&#xA;Ctrl+Shift+X 把当前选中的文本全部变味小写&#xA;Ctrl+Shift+Y 把当前选中的文本全部变为小写&#xA;Ctrl+Shift+F 格式化当前代码&#xA;Ctrl+Shift+P 定位到对于的匹配符(譬如{}) (从前面定位后面时,光标要在匹配符里面,后面到前面,则反&#xA;&#xA;之)&#xA;下面的快捷键是重构里面常用的,本人就自己喜欢且常用的整理一下(注:一般重构的快捷键都是Alt+Shift&#xA;&#xA;开头的了)&#xA;Alt+Shift+R 重命名 (是我自己最爱用的一个了,尤其是变量和类的Rename,比手工方法能节省很多劳动力&#xA;&#xA;)&#xA;Alt+Shift+M 抽取方法 (这是重构里面最常用的方法之一了,尤其是对一大堆泥团代码有用)&#xA;Alt+Shift+C 修改函数结构(比较实用,有N个函数调用了这个方法,修改一次搞定)&#xA;Alt+Shift+L 抽取本地变量( 可以直接把一些魔法数字和字符串抽取成一个变量,尤其是多处调用的时候)&#xA;Alt+Shift+F 把Class中的local变量变为field变量 (比较实用的功能)&#xA;Alt+Shift+I 合并变量(可能这样说有点不妥Inline)&#xA;Alt+Shift+V 移动函数和变量(不怎么常用)&#xA;Alt+Shift+Z 重构的后悔药(Undo)&#xA;编辑&#xA;作用域 功能 快捷键 &#xA;全局 查找并替换 Ctrl+F &#xA;文本编辑器 查找上一个 Ctrl+Shift+K &#xA;文本编辑器 查找下一个 Ctrl+K &#xA;全局 撤销 Ctrl+Z &#xA;全局 复制 Ctrl+C &#xA;全局 恢复上一个选择 Alt+Shift+↓ &#xA;全局 剪切 Ctrl+X &#xA;全局 快速修正 Ctrl1+1 &#xA;全局 内容辅助 Alt+/ &#xA;全局 全部选中 Ctrl+A &#xA;全局 删除 Delete &#xA;全局 上下文信息 Alt+？&#xA;Alt+Shift+?&#xA;Ctrl+Shift+Space &#xA;java编辑器 显示工具提示描述 F2&#xA;java编辑器 选择封装元素 Alt+Shift+↑&#xA;java编辑器 选择上一个元素 Alt+Shift+←&#xA;java编辑器 选择下一个元素 Alt+Shift+→&#xA;文本编辑器 增量查找 Ctrl+J &#xA;文本编辑器 增量逆向查找 Ctrl+Shift+J &#xA;全局 粘贴 Ctrl+V &#xA;全局 重做 Ctrl+Y &#xA;&#xA;查看&#xA;作用域 功能 快捷键 &#xA;全局 放大 Ctrl+= &#xA;全局 缩小 Ctrl+- &#xA;&#xA;窗口&#xA;作用域 功能 快捷键 &#xA;全局 激活编辑器 F12 &#xA;全局 切换编辑器 Ctrl+Shift+W &#xA;全局 上一个编辑器 Ctrl+Shift+F6 &#xA;全局 上一个视图 Ctrl+Shift+F7 &#xA;全局 上一个透视图 Ctrl+Shift+F8 &#xA;全局 下一个编辑器 Ctrl+F6 &#xA;全局 下一个视图 Ctrl+F7 &#xA;全局 下一个透视图 Ctrl+F8 &#xA;文本编辑器 显示标尺上下文菜单 Ctrl+W &#xA;全局 显示视图菜单 Ctrl+F10 &#xA;全局 显示系统菜单 Alt+- &#xA;&#xA;导航&#xA;作用域 功能 快捷键 &#xA;ｊａｖａ编辑器 打开结构 Ctrl+F3 &#xA;全局 打开类型 Ctrl+Shift+T &#xA;全局 打开类型层次结构 F4 &#xA;全局 打开外部ｊａｖａdoc Shift+F2&#xA;全局 打开资源 Ctrl+Shift+R &#xA;全局 后退历史记录 Alt+← &#xA;全局 前进历史记录 Alt+→ &#xA;全局 上一个 Ctrl+, &#xA;全局 下一个 Ctrl+. &#xA;ｊａｖａ编辑器 显示大纲 Ctrl+O &#xA;全局 在层次结构中打开类型 Ctrl+Shift+H &#xA;全局 转至匹配的括号 Ctrl+Shift+P &#xA;全局 转至上一个编辑位置 Ctrl+Q &#xA;ｊａｖａ编辑器 转至上一个成员 Ctrl+Shift+↑ &#xA;ｊａｖａ编辑器 转至下一个成员 Ctrl+Shift+↓ &#xA;文本编辑器 转至行 Ctrl+L &#xA;&#xA;搜索&#xA;作用域 功能 快捷键 &#xA;全局 出现在文件中 Ctrl+Shift+U &#xA;全局 打开搜索对话框 Ctrl+H &#xA;全局 工作区中的声明 Ctrl+G &#xA;全局 工作区中的引用 Ctrl+Shift+G &#xA;&#xA;文本编辑&#xA;作用域 功能 快捷键 &#xA;文本编辑器 改写切换 Insert &#xA;文本编辑器 上滚行 Ctrl+↑ &#xA;文本编辑器 下滚行 Ctrl+↓ &#xA;&#xA;文件&#xA;作用域 功能 快捷键 &#xA;全局 保存 Ctrl+X &#xA;Ctrl+S &#xA;全局 打印 Ctrl+P &#xA;全局 关闭 Ctrl+F4 &#xA;全局 全部保存 Ctrl+Shift+S &#xA;全局 全部关闭 Ctrl+Shift+F4 &#xA;全局 属性 Alt+Enter &#xA;全局 新建 Ctrl+N &#xA;&#xA;项目&#xA;作用域 功能 快捷键 &#xA;全局 全部构建 Ctrl+B &#xA;&#xA;源代码&#xA;作用域 功能 快捷键 &#xA;java编辑器 格式化 Ctrl+Shift+F&#xA;java编辑器 取消注释 Ctrl+\&#xA;java编辑器 注释 Ctrl+/&#xA;java编辑器 添加导入 Ctrl+Shift+M&#xA;java编辑器 组织导入 Ctrl+Shift+O&#xA;java编辑器 使用try/catch块来包围 未设置，太常用了，所以在这里列出,建议自己设置。&#xA;也可以使用Ctrl+1自动修正。 &#xA;&#xA;运行&#xA;作用域 功能 快捷键 &#xA;全局 单步返回 F7 &#xA;全局 单步跳过 F6 &#xA;全局 单步跳入 F5 &#xA;全局 单步跳入选择 Ctrl+F5 &#xA;全局 调试上次启动 F11 &#xA;全局 继续 F8 &#xA;全局 使用过滤器单步执行 Shift+F5 &#xA;全局 添加/去除断点 Ctrl+Shift+B &#xA;全局 显示 Ctrl+D &#xA;全局 运行上次启动 Ctrl+F11 &#xA;全局 运行至行 Ctrl+R &#xA;全局 执行 Ctrl+U &#xA;&#xA;重构&#xA;作用域 功能 快捷键 &#xA;全局 撤销重构 Alt+Shift+Z &#xA;全局 抽取方法 Alt+Shift+M &#xA;全局 抽取局部变量 Alt+Shift+L &#xA;全局 内联 Alt+Shift+I &#xA;全局 移动 Alt+Shift+V &#xA;全局 重命名 Alt+Shift+R &#xA;全局 重做 Alt+Shift+Y &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;jrebel&#34;&gt;&#xA;  jrebel&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#jrebel&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;介绍&#xA;        热加载&#xA;使用:&#xA;        myeclipse根目录下配置自定义 插件&#xA;        window -&amp;gt; preferences -&amp;gt; JRebel中关联jar包，设定自动部署时间&#xA;    window -&amp;gt; preferences -&amp;gt; services -&amp;gt; tomcat -&amp;gt; tomcat6(可以配置是否启用jrebel和打印jrebel的日志)-&amp;gt;jdk 加上资源分配参数与tomcat要加载的jar包:&#xA;                        -noverify -javaagent:D:\(修改为自己的目录)\jrebel.jar -Xmx512M -Xms512M -XX:MaxPermSize=1024m&#xA;        项目右键jrebel生成reble.xml,其中配置rebel要管理的项目在tomcat中的路径&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>VIM</title>
      <link>https://ukeate.com/docs/tool/develop/vim/</link>
      <pubDate>Thu, 11 Oct 2018 18:31:16 +0800</pubDate>
      <guid>https://ukeate.com/docs/tool/develop/vim/</guid>
      <description>&lt;h1 id=&#34;编译&#34;&gt;&#xA;  编译&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bc%96%e8%af%91&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;--with-features=tiny                # 只包含最基本功能。small, normal, big, huge, :h feature-list查看&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;命令&#34;&gt;&#xA;  命令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%91%bd%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;vim -u NONE -N                      # -u NONE 不加载配置文件和插件，并进入vi兼容模式&#xA;    -u code/essential.vim           # 加载指定配置文件&#xA;    -N set nocompatible             # 不进入vi兼容模式&#xA;    --version                       # 可查看特性&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;mode&#34;&gt;&#xA;  mode&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mode&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;普通模式&#xA;插入模式&#xA;可视模式&#xA;    v/V                             # 面向字/面向行 可视模式&#xA;    &amp;lt;C - v&amp;gt;                         # 面向块 可视模式&#xA;    gv                              # 重选上次选区&#xA;    o                               # 切换到选区的开头, 再按切换回尾端　&#xA;替换模式&#xA;    R&#xA;命令行模式(Ex命令)&#xA;    :                               # 可视模式中选定范围，切换到命令行时，自动输入range&#39;&amp;lt;,&#39;&amp;gt;代表选中区&#xA;操作符待决模式                         # operator 与 motion之间的空闲时期&#xA;                                    # 两个字符的operator, 字符间的空闲时期不是该模式，是命名空间，是普通模式的扩充&#xA;                                    # 有了这个模式，能创建自定义映射项来激活或终结操作符待决模式，就可以自定义operator和motion&#xA;选择模式                              # 类似windows中选中&#xA;    &amp;lt;C - g&amp;gt;在可视和选择模式切换&#xA;历史&#xA;    q:                              # 命令历史&#xA;    q/                              # 搜索历史&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;operate&#34;&gt;&#xA;  operate&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#operate&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;思想&#xA;    {operator}{motion}&#xA;    {operator}{text-objects}&#xA;shortcut key&#xA;    ctrl + c                        # 同Esc&#xA;motions&#xA;    .                               # 重复前一次修改, 目标做到一键移动，一键执行。修改是指: 一个normal模式下的按键, 插入内容, &amp;lt;ESC&amp;gt;; 或一组normal模式下按键&#xA;    K                               # 当前单词的:h 手册&#xA;    ga                              # 当前字符的unicode码&#xA;Ex command                          # 可视模式下选中行, : 时前面有&#39;&amp;lt;,&#39;&amp;gt; 表示对选中的行执行操作&#xA;    :h e 或 :help e                 # 查看e的帮助&#xA;        vimtutor 查看教程&#xA;        operator 查看operator&#xA;        map-operator 查看自定义operator&#xA;        omap-info 查看自定义motion&#xA;        digraphs-default&#xA;        digraphs&#xA;        digraphs-table 查看二合字符表&#xA;        ex-cmd-index 查看所有Ex命令&#xA;        vi-differences vim 相对vi的特性&#xA;    :version                        # 查看版本和支持的功能&#xA;    :! command                      # 执行某shell命令(CR返回)&#xA;        !! 执行前一个命令&#xA;        r!command 执行结果插入当前位置&#xA;        w!command 当前文件作为输入执行&#xA;    :cd directory                   # 修改工作目录&#xA;    :sh                             # 跳到shell, 再执行exit返回&#xA;    :map bbc ia                     # 定义命令序列ia的别名为bbc&#xA;    :pwd                            # 显示当前目录&#xA;    :normal A;                      # 执行普通模式命令A;, 添加分号到行尾&#xA;    系统命令&#xA;        :grep t * # 在当前所有文件中匹配t, 自动加-n参数(显示行号)&#xA;        :ls&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;locate-oper&#34;&gt;&#xA;  locate oper&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#locate-oper&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;motion&#xA;    ^/$/0/&amp;lt;home&amp;gt;/g_/h/l/j/k/w/W/e/E/b/B/ge/gE/gg/G/[[/]]/(/)/{/}/nH/M/nL/点鼠标&#xA;        # 移动motion&#xA;        ge同b, 停在单词尾部&#xA;        &amp;lt;home&amp;gt;同0, 到行开始, ^则到本行第一个字符&#xA;        gg同[[，G同]]，10G跳到第10行&#xA;        fx 移动到下一个x, F反向查找, tx 移动到x的前一个字符&#xA;&#xA;        nG 跳到第n行&#xA;    f/F/t/T                         # 行搜索motion         重复查找(以相反方向重复搜索)&#xA;    ;                               # 重复移动上次f/F/t/T的字符&#xA;    ,                               # 撤销上次f/F/t/T移动&#xA;    *                               # 查找当前词&#xA;    nzz/nz-                         # 跳到指定行, 显示在屏幕中间/底部&#xA;        zz 当前屏幕到中间&#xA;    可视模式&#xA;        $                           # 块可视模式中，表示所有行尾&#xA;        i/a                         # 块可视模式中有不同含义&#xA;operator&#xA;    3G                              # 跳到第3行&#xA;    /text　　                        # 查找text，按n健查找下一个，按N健查找前一个。&#xA;    ?text　　                        # 查找text，反向查找，按n健查找下一个，按N健查找前一个。&#xA;    *或#                            # # *相当于/，#相当于?&#xA;        g* 搜索子串&#xA;        gd  同* 但跳到第一个匹配序列&#xA;    %                               # 搜索对应括号&#xA;&#xA;    o-&amp;gt; marks&#xA;    ``                              # 跳回&#xA;        `&amp;quot; 最后编辑的位置&#xA;        `[ 最后修改的开始位置&#xA;        `] 最后修改的结束位置&#xA;        &#39;. `. 跳到上次编辑位置&#xA;    &#39;&#39;                              # 跳回到第一个非空白字符&#xA;    marks                           # 显示系统全部书签&#xA;    ma                              # mark当前光标位置为a，小写字母不同文件标记不同行, 大写字母全局标记，但webstorm中ideaVim不行&#xA;    `a                              # 跳到a的位置&#xA;Ex command&#xA;    :10                             # 跳到第10行, 同10G, 0位于第一行上方&#xA;    :jumps                          # 输出能跳往的位置列表，可跳转多个文件&#xA;    :$                              # 文件结尾&#xA;    :.                              # 当前位置&#xA;    :%                              # 文件中的所有行&#xA;    :&#39;&amp;lt;                             # 选中区开始&#xA;    :&#39;&amp;gt;                             # 选中区结尾&#xA;    :&#39;m                             # 位置标记为m的行&#xA;    :/&amp;lt;html&amp;gt;/,/&amp;lt;\html&amp;gt;/             # 模式匹配范围&#xA;    : 1+1, 5-1                      # 开始向下偏移一行，结尾向上偏移一行&#xA;    :vim[grep] abc test             # 在test文件中grep匹配abc&#xA;shortcut key&#xA;    &amp;lt;c - e&amp;gt;/y                       # 向下/上滚动一行&#xA;    &amp;lt;c - d&amp;gt;/u                       # 向下/上滚动半屏&#xA;    &amp;lt;c - f&amp;gt;/b                       # 向下/上滚动一屏&#xA;    &amp;lt;c - i&amp;gt;/o                       # 到下个/上个跳动过的位置&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;edit-oper&#34;&gt;&#xA;  edit oper&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#edit-oper&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;shortcut key&#xA;    &amp;lt;C - r&amp;gt;                         # 撤销的撤销&#xA;    &amp;lt;C - a&amp;gt;/x                       # 数字增加/减少1, 对0开关数字进行八进制操作, 0x进行十进制操作。可以设置nrformats改变&#xA;    插入模式/命令模式&#xA;        &amp;lt;C - h&amp;gt;                     # 删除前一个字符&#xA;        &amp;lt;C - w&amp;gt;                     # 命令模式可用，删除前一个单词&#xA;        &amp;lt;C - u&amp;gt;                     # 命令模式可用，删至行首&#xA;        &amp;lt;C - [&amp;gt;                     # 返回普通模式&#xA;        &amp;lt;C - o&amp;gt;                     # 到插入-普通模式&#xA;        &amp;lt;C - v&amp;gt;                     # 命令模式可用，插入编码对应的字符&#xA;            065                     # 两位的编码&#xA;            u00bf                   # 超过3位的unicode码&#xA;            非数字                   # 直接插入, 如expandtab开启后插入tab&#xA;        &amp;lt;C - k&amp;gt;{char1}{char2}       # 命令模式可用，插入以二合字母表示的字符&#xA;            12&#xA;            &amp;lt;&amp;lt;&#xA;            ?I&#xA;        &amp;lt;C - r&amp;gt;{register}           # 命令模式可用，插入寄存器内容&#xA;    补全&#xA;        &amp;lt;C - n&amp;gt;/p                   # 自动补全下/上&#xA;&#xA;        &amp;lt;C - x&amp;gt; 接着按如下&#xA;            &amp;lt;C - L&amp;gt;                 # 整行补全&#xA;            &amp;lt;C - N&amp;gt;                 # 根据当前文件里关键字补全&#xA;            &amp;lt;C - K&amp;gt;                 # 根据字典补全&#xA;            &amp;lt;C - T&amp;gt;                 # 根据同义词字典补全&#xA;            &amp;lt;C - I&amp;gt;                 # 根据头文件内关键字补全&#xA;            &amp;lt;C - ]&amp;gt;                 # 根据标签补全&#xA;            &amp;lt;C - F&amp;gt;                 # 补全文件名&#xA;            &amp;lt;C - D&amp;gt;                 # 补全宏定义&#xA;            &amp;lt;C - V&amp;gt;                 # 补全vim命令&#xA;            &amp;lt;C - U&amp;gt;                 # 用户自定义补全方式&#xA;            &amp;lt;C - S&amp;gt;                 # 拼写建议&#xA;operator                            # num + operator 来多次操作, 合并命令如A(同$a), 是为了普通模式下一个按键进行插入，这样能够在.命令中重复&#xA;    @:                              # 重复Ex命令&#xA;    &amp;amp;                               # 重复substitute命令&#xA;    x/X                             # 删除当前字符/删除前一个字符， x等于dl，X 等于dh&#xA;    u/U                             # 撤销(Undo)/撤销对整行的操作&#xA;    r/R                             # 替换一个字符/持续替换字符，tab是一个字符&#xA;        gR                          # 一个tab由tabstop个字符才能替换&#xA;        gr&#xA;    y/yy/Y                          # yank 复制/复制一行/同yy&#xA;        :y&#xA;    p/P                             # 粘贴/前面粘贴&#xA;        :p&#xA;    a/A                             # s当前字符后插入&#xA;        A同$a, 行尾插入&#xA;    o/O                             # 向后插入行&#xA;        o同A&amp;lt;CR&amp;gt;&#xA;        O同ko, 向前插入行&#xA;    s/S                             # 替换当前字符/替换当前行&#xA;        s同cl&#xA;        S同^C&#xA;    i/I                             # 当前字符前插入/行首插入&#xA;        I同^i &#xA;    c/cc/C                          # 替换/替换一行/同cc&#xA;        :0,10c 与 :c&#xA;        C同c$&#xA;    d/dd/D                          # 删除/删除一行/删到行尾&#xA;        dd 同 :d&#xA;        10d表示删除10行&#xA;        D同d$&#xA;        :0,10d 与 :d&#xA;    &amp;lt;&amp;lt;/&amp;gt;&amp;gt;&#xA;        可视模式下 &amp;lt;/&amp;gt;&#xA;        命令下 1&amp;gt;&amp;gt;2 表示从1行开始, 作用2行&amp;gt;&amp;gt;, 可以1&amp;gt;&amp;gt;&amp;gt;&amp;gt;2&#xA;        1,2&amp;gt; 表示 1到2行&amp;gt;&amp;gt;, 可以1,2&amp;gt;&amp;gt;&#xA;        &amp;gt;G 缩进当前到最后一行&#xA;    =                               # 自动缩进&#xA;        == 自动缩进当前行&#xA;    !                               # 用外部命令过滤指定行&#xA;        如!j, 自动进入命令模式, 选定了指定行进行!&#xA;        !!当前[count]行&#xA;    J                               # 与下行合并&#xA;    g                               # :[range]global/{pattern}/{command}&#xA;        global命令在[range]指定的文本范围内（缺省为整个文件）查找{pattern}，然后对匹配到的行执行命令{command}，如果希望对没匹配上的行执行命令，则使用global!或vglobal命令。&#xA;        g/^/m 0 倒序文件行&#xA;    g_                              # 到本行最后一个不是blank字符的位置&#xA;    gd                              # 智能跳到当前变量定义的位置&#xA;    gu/gU                           # 转换到小写/大写, 如gUw&#xA;        gugu / guu / gUgU / gUU&#xA;    g~                              # 大写转小写，小写转大写&#xA;        g~g~ / g~~ 转换一行&#xA;    可视模式下&#xA;            U/u                     # 大写/小写&#xA;ex command&#xA;    :1,10 co 20                     # 将1-10行插入到第20行之后。&#xA;        :1,$ co $ 复制整个文件添加到尾部&#xA;    :1, 10 m 20                     # 第1-10行移动到第20行之后&#xA;    :ab attr attribute              # 缩写, 输入模式中输入attr,再输入非字母字符(空格, 点等)，自动补全&#xA;        ab查看所有缩写&#xA;        una/unab attr 取消缩写　&#xA;    :!                              # 执行外部命令&#xA;    :[range]copy{address} /:t /:co  # 复制range到address后, :t 2 表示复制当前行到第2行后&#xA;    :[range]move{address}           # 移动&#xA;    :[range]join                    # 连接&#xA;    :[range]delete[x]               # 删除指定范围内的行到寄存器中&#xA;    :[range]yank[x]                 # 复制&#xA;    :[line]put[x]                   # 指定行后粘贴寄存器中内容&#xA;    :[range]normal{commands}        # 指定范围执行命令&#xA;    :[range]print / p               # 在vim下方回显指定行的内容&#xA;text-object&#xA;    i&amp;quot;&#xA;        &amp;quot; 表示 光标所在&amp;quot;&amp;quot;的内容&#xA;        &#39;&#xA;        `&#xA;        ) 表示 ()的内容&#xA;        ( 同上&#xA;        ]&#xA;        [&#xA;        &amp;gt;&#xA;        &amp;lt;&#xA;        }&#xA;        {&#xA;        B 表示 {}的内容&#xA;        t 表示 tag之间的内容，如&amp;lt;h2&amp;gt;aaaa&amp;lt;/h2&amp;gt;&#xA;        w 表示 光标所在word&#xA;        s 表示 光标所在句子&#xA;        p 表示 段落&#xA;    a&amp;quot;                              # 包括外围，命令同i&#xA;    视图模式下&#xA;        vit                         # 在可视模式下选中标签内容，如&amp;lt;a&amp;gt;xxx&amp;lt;/a&amp;gt;的xxx&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;patterns-oper&#34;&gt;&#xA;  patterns oper&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#patterns-oper&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;operator&#xA;    &amp;amp;                               # 重复:s上次执行的命令, 不包含g&#xA;        g&amp;amp; 全局重复:s上次的命令&#xA;    n/N                             # 查找下一个/上一个&#xA;Ex command&#xA;    :[range]substitude/{pattern}/{string}/[flags]&#xA;        :s 用new替换old，替换当前行的第一个匹配&#xA;        前面是正则, 用()分组，后面用\1引用分组&#xA;        :s/old/new/g 作用到整行&#xA;        :%s/old/new/ 作用到每行第一个&#xA;        :10,20 s/^/    /g 作用到10到20行的每一个&#xA;        :%s/old/new/g 作用到全文&#xA;        :s/old/new/gc 每次修改前询问&#xA;&#xA;    :[range]global/{pattern}/[cmd]&#xA;        :g 查找text的行执行命令,如:g/text/s/old/new/g&#xA;        v/text/command 查找到行不执行命令,其它行执行&#xA;    :&amp;amp;                              # 同operator中&amp;amp;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;registers-oper&#34;&gt;&#xA;  registers oper&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#registers-oper&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;register                            # 寄存器&#xA;    :reg                            # 查看所有寄存器 或 :reg 1 查看寄存器1的内容&#xA;    &amp;quot;0p                             # &amp;quot;0&amp;lt;operator&amp;gt; 粘贴寄存器0的内容&#xA;        &amp;quot;0y 复制到寄存器0&#xA;    :pu 0                           # 同上&#xA;        :pu! 0 同 &amp;quot;0P&#xA;    :y a                            # 复制当前行到&amp;quot;a寄存器&#xA;        :5,10y m 复制5到10行到&amp;quot;m寄存器&#xA;    分类&#xA;        &amp;quot;&amp;quot;                          # unamed 缓存最后一次操作内容&#xA;        &amp;quot;0                          # numbered 范围0 - 9 。&amp;quot;0缓存最近一次复制的内容&#xA;            &amp;quot;1到&amp;quot;9缓存最近9次删除的内容, &amp;quot;9向后则丢弃&#xA;            第2次删除时，缓存1转存到缓存2, 新的删除内容存到缓存1&#xA;        &amp;quot;-                          # small delete 缓存行内删除内容&#xA;        &amp;quot;a                          # named 范围a - z 与 A - Z&#xA;        &amp;quot;:                          # read-only&#xA;            如 &amp;quot;: 最近命令 &amp;quot;. 最近插入文本 &amp;quot;% 当前文件名 &amp;quot;# 当前交替文件名&#xA;        &amp;quot;=                          # expression 用于执行表达式命令，只读&#xA;        &amp;quot;*                          # selection and drop&#xA;            如 &amp;quot;* &amp;quot;+ &amp;quot;~ 存取GUI选择文本，可用于与外部交互，要求系统剪切板(clipboard)可用&#xA;        &amp;quot;_                          # black hole 表示不缓存，干净删除&#xA;        &amp;quot;/                          # last search pattern 缓存最近的搜索模式&#xA;shortcut key&#xA;    &amp;lt;C - r&amp;gt;0                        # 插入寄存器缓冲区内容, 原理是vim插入模式模拟打入&#xA;            &amp;lt;C - p&amp;gt;0                # 保持格式不变&#xA;    &amp;lt;C - r&amp;gt;=6 * 35&amp;lt;CR&amp;gt;              # 计算结果&#xA;宏&#xA;    qa ... q                        # 录制宏a，存到寄存器中，可以用&amp;quot;ap粘贴出来&#xA;    @a                              # 运行宏a&#xA;    let @a = &amp;quot;&amp;quot;                     # 用let @a 在.vimrc设置文件中设置宏a&#xA;    内置宏&#xA;        :                           # 上次的Ex命令&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;file-oper&#34;&gt;&#xA;  file oper&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#file-oper&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;shell&#xA;    $ vim file1 file2..&#xA;    $ vimtutor                      # vim的教程&#xA;&#xA;operator&#xA;    o-&amp;gt; 折叠&#xA;    zf                              # 创建折叠&#xA;        zf% 创建括号折叠&#xA;        zf56G 创建从当前行起到56行代码的折叠&#xA;    zo/zO                           # 展开当前/递归展开当前(folding open, z这个字母看上去比较像折叠的纸)&#xA;    zc/zC                           # 再折叠/递归再折叠(folding close)&#xA;    [z                              # 到折叠的开始处&#xA;    z]                              # 到折叠的结束处&#xA;    zk                              # 向上移动到前一个折叠的结束处&#xA;    zd/zD                           # 删除当前光标下的折叠/嵌套删除折叠&#xA;&#xA;    o-&amp;gt; 文件对比&#xA;    vim -d file1 file2&#xA;    diffsplit file2&#xA;    diffthis&#xA;    diffupdate&#xA;    [c                              # 跳到前一个不同点&#xA;    ]c                              # 跳到后一个不同点&#xA;    dp                              # 合并增加另一个 （diff put）&#xA;    do                              # 合并增加当前 （diff get）&#xA;Ex command&#xA;    :help                           # 显示帮助, 同F1&#xA;        帮助文件中位于||之间的内容是超链接，可以用Ctrl+]进入链接，Ctrl+o（Ctrl + t）返回&#xA;        :help tutor 显示vimtutor的教程&#xA;        :help xx 显示某个帮助, 如help CTRL-[&#xA;        :help &#39;number&#39; 显示vim选项的帮助&#xA;        :help &amp;lt;Esc&amp;gt; 显示特殊键的帮助&#xA;        :help -t 显示vim启动参数的帮助&#xA;        :help i_&amp;lt;Esc&amp;gt; 插入模式下Esc的帮助，某个模式下的帮助用 模式_主题的模式&#xA;    :r/nr filename                  # 插入一个文件的内容/插入到第n行&#xA;    :f                              # 显示当前文件状态&#xA;    :.=                             # 打印当前行号&#xA;        := 打印总行号&#xA;    :open file                      # 新窗口打开文件&#xA;    :saveas filename                # 另存为并切换到文件&#xA;    :tabnew                         # 新建标签页&#xA;    :split file/:new                # 屏幕分割&#xA;    :vsplit 纵向打开窗口&#xA;    :q                              # q! 强制退出&#xA;    :w/:write                       # :w filename 写入新文件&#xA;    :x                              # 有改动时保存并退出, 无改动只退出&#xA;    ZZ&#xA;    :e/:edit                        # 重新打开文件, e! 放弃所有修改重新打开文件&#xA;        e filename 当前窗口打开另一个文件&#xA;    :bn/:bp                         # 切换上个/下个文件&#xA;    :saveas &amp;lt;path/to/file&amp;gt;          # 另存为到 &amp;lt;path/to/file&amp;gt;&#xA;    :!command                       # 执行shell命令，如 :!ls&#xA;        :!perl -c script.pl 检查perl脚本语法，可以不用退出vim，非常方便。&#xA;        :!perl script.pl 执行perl脚本，可以不用退出vim，非常方便。&#xA;    :suspend                        # 挂起vim，回到shell，命令fg返回vim。&#xA;    :buffers/:ls                    # 缓冲区列表&#xA;    :bprev                          # 上一缓冲区&#xA;    :bnext                          # 下一缓冲区&#xA;&#xA;    o-&amp;gt; 多视窗&#xA;    :vert                           # 横向打开&#xA;    :vsplit                         # 横向打开&#xA;    :split&#xA;    :prev                           # 上一个文件&#xA;    :next                           # 下一个文件&#xA;    :close                          # 最后一个窗口不能使用此命令，可以防止意外退出vim。&#xA;    :only                           # 关闭所有窗口，只保留当前窗口&#xA;&#xA;    o-&amp;gt; 标签窗口                      # 启动 Vim 时用 &amp;quot;vim -p filename ...&amp;quot;&#xA;    :tabe[dit]                      # 打开文件到标签&#xA;    :tabnew                         #  在当前标签页之后打开带空窗口的新标签页。&#xA;    :tabc[lose][!]{count}           #  关闭当前标签页。 {}表示关闭第count个标签&#xA;    :tabo[nly][!]                   # 关闭所有其它的标签页。&#xA;    :tabn[ext] {count}              # 切换到后面的标签页&#xA;    :tabp[revious] {count}          # 切换到前面的标签页&#xA;    :tabr[ewind]                    # 回卷跳转&#xA;    :tabfir[st]                     #  转到第一个标签页。&#xA;    :tabl[ast]                      # 转到最后一个标签页。&#xA;    :tabm[ove] [N]                  # 重排标签页&#xA;        把当前标签页移到第 N 个标签页之后。用 0 使当前标签页成为首个标&#xA;        签页。如果没有 N，当前标签页成为最后一个。&#xA;    :tabs                           # 列出标签页和它们包含的窗口信息。&#xA;        当前窗口显示 &amp;quot;&amp;gt;&amp;quot;。&#xA;        修改过的缓冲区显示 &amp;quot;+&amp;quot;。&#xA;    :tabd[o] {cmd}                  # 对每个标签页执行 {cmd}&#xA;&#xA;shortcut keys&#xA;        ctrl - z                    # 同 :suspend&#xA;        ctrl + g                    # 同 :f&#xA;&#xA;        o-&amp;gt; 多视窗&#xA;        ctrl + w + hljk&#xA;        ctrl + w + w                # 跳到下一个&#xA;        ctrl + w + p                # 跳到前一个&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;settings&#34;&gt;&#xA;  settings&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#settings&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;设置文件&#xA;    /etc/vimrc&#xA;    ~/.vimrc                        # vim的配置文件, 优先于.exrc&#xA;    ~/.exrc                         # vi的配置文件&#xA;命令&#xA;    :set&#xA;        all                         # 打印所有set选项&#xA;        nocompatible                # 不设置vi兼容&#xA;        ruler? 　　                  # 查看是否设置了ruler，在.vimrc中，使用set命令设制的选项都可以通过这个命令查看&#xA;        shell    :/usr/bin/sh       # 使用SystemⅤ中的shell来执行vi中以！或  :!开头的shell命令&#xA;        nrformts                    # 设置进制, &amp;lt;c - a&amp;gt; &amp;lt;c - x&amp;gt;时对八进制有用，如07&#xA;&#xA;        encoding=utf-8              # 程序显示编码&#xA;        enc                         # 同上&#xA;        fileencodings=ucs-bom,utf-8,cp936                       # 设置读取文件支持的编码&#xA;        fencs                       # 同上&#xA;        fileencoding=utf-8          # 当前文件编码&#xA;        fenc                        # 同上&#xA;        termencoding=utf-8          # 设置终端编码&#xA;        tenc                        # 同上&#xA;&#xA;        list                        # 显示非打印字符，如tab，空格，行尾等。&#xA;        nolist                      # 取消显示非打印字符, 如果tab无法显示，请确定用 set lcs=tab:&amp;gt;- 命令设置了.vimrc文件&#xA;        number                      # 显示行号&#xA;        nu                          # 同上&#xA;        nonumber                    # 不显示行号&#xA;        nonu                        # 同上&#xA;        reprot=2                    # 用户做2行以上修改时显示统计信息&#xA;        hlsearch                    # 设置查找高亮&#xA;        hls                         # 同上&#xA;        incsearch                   # 查找高亮所有(增量高亮)&#xA;&#xA;        smartindent                 # 括号补全&#xA;        sm                          # 同上&#xA;        ignorecase                  # 查找时忽略大小写&#xA;        ic                          # 同上&#xA;        noignorecase                # 查找时不忽略大小写&#xA;        noic                        # 同上&#xA;        expandtab                   # 存起来的文件, 用space替换tab&#xA;        shiftwidth=4                # 换行时缩进长度&#xA;        sw                          # 同上&#xA;        softtabstop=4               # 插入模式tab长度&#xA;        tabstop=4                   # 识别和显示tab时，转换成space的长度&#xA;&#xA;        autoindent                  # 启用自动缩进&#xA;        ai                          # 同上&#xA;        foldmethod=indent           # 设置折叠&#xA;        fdm                         # 同上&#xA;            indent 缩进折叠&#xA;            syntax 语法高亮折叠&#xA;            expr 表达式定义折叠&#xA;            diff 对没有更改的文本折叠&#xA;            marker 对文中的标志折叠&#xA;    :scriptnames                    # 脚本文件位置，如.vimrc文件、语法文件、plugin&#xA;    :syntax clear                   # 列出已经定义的语法项&#xA;        clear 清除已定义的语法规则&#xA;        case match 大小写敏感，int和Int将视为不同的语法元素&#xA;        case ignore 大小写无关，int和Int将视为相同的语法元素，并使用同样的配色方案&#xA;配置&#xA;    inoremap &amp;lt;C-]&amp;gt; &amp;lt;C-X&amp;gt;&amp;lt;C-]&amp;gt;       # 插入模式下映射&#xA;    nnoremap                        # 在normal模式下映射&#xA;    fileType plugin on              # 激活内置插件, 检测文件类型&#xA;    filetype on                     # 同上&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;plugins&#34;&gt;&#xA;  plugins&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#plugins&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;netrw&#xA;    介绍&#xA;        自带插件&#xA;    edit ./                         # 查看目录树&#xA;    Ex                              # 同上&#xA;    Se                              # 下面弹出目录树 好用&#xA;    Ve                              # 左面弹出目录树 好用&#xA;&#xA;    &amp;lt;cr&amp;gt;   netrw 进入目录或读入文件 |netrw-cr|&#xA;    &amp;lt;del&amp;gt;  netrw 试图删除文件/目录 |netrw-del|&#xA;    -    netrw 往上走一层目录 |netrw--|&#xA;    a    在以下三种方式间切换: 正常显示，|netrw-a|&#xA;        隐藏 (不显示匹配 g:netrw_list_hide 的文件) 和&#xA;        显示 (只显示匹配 g:netrw_list_hide 的文件)&#xA;    c    使浏览中的目录成为当前目录 |netrw-c|&#xA;    d    建立目录 |netrw-d|&#xA;    D    netrw 试图删除文件/目录 |netrw-D|&#xA;    i    在瘦、长、宽和树形的各种列表方式间切换 |netrw-i|&#xA;    &amp;lt;c-l&amp;gt;  netrw 刷新目录列表 |netrw-ctrl-l|&#xA;    o    打开新浏览窗口，进入光标所在的目录。使用水平分割。|netrw-o|&#xA;    p    预览文件 |netrw-p|&#xA;    P    在前次使用的窗口里浏览 |netrw-P|&#xA;    r    反转排序顺序 |netrw-r|&#xA;    R    给指定的文件/目录换名 |netrw-R|&#xA;    s    选择排序方式: 按名字、时间或文件大小排序 |netrw-s|&#xA;    S    指定按名字排序的后缀优先级 |netrw-S|&#xA;    t    在新标签页里打开光标所在的文件/目录 |netrw-t|&#xA;    v    打开新浏览窗口，进入光标所在的目录。使用垂直分割。|netrw-v|&#xA;ctags&#xA;    将ec57w32.zip解压，在解压后文件夹中找到ctags.exe，将其复制到C:\ProgramFiles\Vim\vim72下，并编辑_vimrc文件，添加以下内容：&#xA;    set tags=tags;&#xA;    set autochdir&#xA;    打开cmd命令行，切换到你要查看的源代码的根目录处，运行&#xA;    ctags -R&#xA;    将会在此目录处生成一个tags文件。&#xA;    用gvim打开一个代码文件，将光标放到某一函数名上，如下图的UpdateViewByPosNo()，按下&amp;quot;ctrl+]&amp;quot;，光标会自动跳转到定义处。按下&amp;quot;ctrl+T&amp;quot;会跳回到原来的位置。&#xA;    变量、结构体、宏等等，都可以这样做。&#xA;    当你的源文件有更新时，只能重新运行ctags -R命令，来更新tags文件。&#xA;&#xA;    taglist&#xA;        将taglist_45.zip解压，解压后包含一个doc文件夹和一个plugin文件夹，将其中内容分别复制到C:\Program Files\Vim\vim72下的doc及plugin中。&#xA;        在_vimrc文件中加入以下内容：&#xA;        let Tlist_Show_One_File=1&#xA;        let Tlist_Exit_OnlyWindow=1&#xA;        用gvim打开代码文件（已生成过tags文件），:Tlist，TagList窗口即出现在左侧。&#xA;&#xA;visual-star&#xA;Qargs&#xA;nerdTreeToggle&#xA;    介绍&#xA;        目录显示插件&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;方案&#34;&gt;&#xA;  方案&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%96%b9%e6%a1%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;加分号&#xA;    jA;&#xA;    j.&#xA;批量执行&#xA;    选中多行, :normal .&#xA;批量前缀&#xA;    选中多行, I&#xA;括起文字&#xA;    ci&amp;quot;        # 替换内容&amp;quot;&amp;quot;&#xA;    ca&amp;quot;        # 替换所有&#xA;    di&amp;quot;        # 删除内容&#xA;    cit        # 替换标签&#xA;执行python&#xA;    选中代码, :!python&#xA;缩进全文&#xA;    gg=G&#xA;替换到&amp;quot;&#xA;    cf&amp;quot;&#xA;esc&#xA;    &amp;lt;C-[&amp;gt;&#xA;目录窗口&#xA;    :Sex&#xA;&#xA;&#xA;console输出乱码&#xA;    language messages utf-8&#xA;    set termencoding=utf-8&#xA;设置文件编码&#xA;    set encoding=utf-8&#xA;    set fileencodings=utf-8,chinese,latin-1&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Apple</title>
      <link>https://ukeate.com/docs/tool/develop/apple/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ukeate.com/docs/tool/develop/apple/</guid>
      <description>&lt;h1 id=&#34;ipad&#34;&gt;&#xA;  ipad&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ipad&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;操作&#xA;    下边向上(短)：桌面&#xA;    下边向上(停): dock&#xA;        dock拖app: 小窗、分屏&#xA;            小窗向边(短): 隐藏&#xA;            小窗向边(停): 分屏&#xA;            小窗向上：分离&#xA;    下角向内(短): 切app&#xA;    下角向内(停): app表&#xA;    右上角向下: 控制中心&#xA;    左上角向下：通知&#xA;    桌面向下: 搜索&#xA;    3指左右: app内切换&#xA;    4指左右：切app&#xA;    4指向内(短): 桌面&#xA;    4指向内(停): app表 &#xA;&#xA;    home一下：桌面&#xA;    home两下：app表&#xA;    截图、导出pdf: 主按键 + 电源键&#xA;&#xA;    键盘：两指缩小浮动&#xA;    分屏: 一指拉出dock, 一指拖出程序&#xA;siri&#xA;    问答: 笑话, 常识, 抛硬币&#xA;    safari: 搜索&#xA;    设置: 蓝牙,飞行模式&#xA;    时钟&#xA;        6点起床&#xA;        德国时间&#xA;        倒计时&#xA;    日历: 9点开会&#xA;    提醒：提醒和给妈妈打电话&#xA;    备忘录：记下我花了10块钱&#xA;    地图：回家路线&#xA;    打车&#xA;    打电话, 发信息&#xA;    照片&#xA;    体育：比赛消息&#xA;    音乐&#xA;    邮件&#xA;    天气&#xA;    计算器&#xA;    股票: xx涨了吗&#xA;    朋友：xx在哪里&#xA;    发微博&#xA;    指定xx: 打开trello发送a&#xA;    附近店&#xA;    相机：自拍模式&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;alfred&#34;&gt;&#xA;  alfred&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#alfred&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;搜索&#xA;    指定网站搜索&#xA;    文件&#xA;剪贴板&#xA;计算器&#xA;自定义脚本&#xA;    打字&#xA;    命令&#xA;    工作流&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;fantastical&#34;&gt;&#xA;  fantastical&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#fantastical&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;个人总结&#xA;    名字 date 9th from 9.30p to 10.32p alert 30min&#xA;对象&#xA;    Account - Calendar Sets - Cals(Subscription+Interesting) + Item(Events + Tasks)&#xA;nlp&#xA;    语法&#xA;        事件 [with 人物] [at 地点] [at 日期时间] [on 日期] [from 日期时间] [to 日期时间] [of every 日期时间] 提醒 URL 日历&#xA;    日期&#xA;        特定&#xA;            日期&#xA;                11月1日     11/1    11.1&#xA;            星期&#xA;                周一        mon/tue/wed/tur/fri/sat/sun&#xA;        相对&#xA;            日期&#xA;                15天后      after 15 days&#xA;            星期&#xA;                下周一      next mon&#xA;        重复&#xA;            日期&#xA;                每月2号     every 2&#xA;            星期&#xA;                每周二      every tue&#xA;                每隔两周的周三      on wed every 2 weeks&#xA;            复合&#xA;                7月1日到8月1日之间的每个周一周二        on mons tues from 7/1 to 8/1&#xA;        区间&#xA;            12月17日到次年1月3日是寒假      寒假 12/17-1/3      12/17~1/3&#xA;    时间&#xA;        24小时制&#xA;            13&#xA;        12小时制&#xA;            下午一点        1p  1pm&#xA;        分钟&#xA;            下午一点半      13:30   1.30p&#xA;        默认&#xA;            早上8点         morning&#xA;            中午12点        noon&#xA;            下午5点         evening&#xA;            晚上8点         night&#xA;            半夜12点        midnight&#xA;        区间&#xA;            下午1点32到晚上7点47        1.32-7.47   1.32~7.47&#xA;    提醒&#xA;        提前2小时提醒       alert 2 hours&#xA;        提前5分钟提醒       alert 5 min&#xA;    URL&#xA;        在合适位置的url&#xA;    日历&#xA;        /Work       /w&#xA;        四个空格&#xA;    待办事项(reminder)&#xA;        开启&#xA;            todo、task、Remind、Remind me to开头&#xA;        独有语义&#xA;            11月27日晚上8点截止     due 11/27 8p        until 11/27 8p      by Thursday&#xA;            低 中 高        ! !! !!!&#xA;快捷键&#xA;    新建                command + n&#xA;    切换日程/待办事项   command + k&#xA;    保存                command + s&#xA;    删除                command + d&#xA;&#xA;    搜索                command + f&#xA;    详情                command + i&#xA;    显示事项            command + r&#xA;    定位到今天          command + t&#xA;    设置                command + ,&#xA;    切换全屏视图        command + shift + f&#xA;&#xA;操作&#xA;    新建页面滑动隐藏&#xA;    长按日期新建&#xA;    长按Item&#xA;        移动到Calendar&#xA;        颜色&#xA;&#xA;        复制/重建/剪切/删除&#xA;        建模板&#xA;        隐藏&#xA;&#xA;        邮件触发事件&#xA;    横划删除&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;mathstudio&#34;&gt;&#xA;  mathStudio&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mathstudio&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;Basic Expressions&#xA;    1+2&#xA;    4*5&#xA;    6!&#xA;Algebra&#xA;    a*a+b&#xA;    Expand((a+b)^10)&#xA;    Apart( (x^2) / ( x^2 + 1)^2)&#xA;    Factor( x^4 + 5x^2 - 6 )&#xA;Solving Quadratic Equations&#xA;    Solve( x^2 + 5x + 6 = 0 )&#xA;    Solve(1,5,6)&#xA;Limits&#xA;    Limit()&#xA;Derivatives&#xA;    D(sin(x))&#xA;Integrals&#xA;    Integrate( x^2 + 3x - 6 )&#xA;Graphing&#xA;    Plot(sin(x))&#xA;Parametric Plots&#xA;    ParametricPlot(cos(u), sin(u))&#xA;Polar Plots&#xA;    PolarPlot(sin(2@theta))&#xA;Time Graphing&#xA;    Plot(sin(x + T))&#xA;Vector Fields&#xA;    VectorPlot(-y, x)&#xA;Multiple Plots&#xA;Minimum, Maximum and Zero Values&#xA;    Plot(sin(x), min=1)&#xA;List Plots&#xA;    ListPlot([1,2,3,4,5,4,3,8,6,8])&#xA;Regression Analysis&#xA;    LinearFit([1,4,9,5,7,5,4,2,9], [3,4,5,7,8,10,4,7,6])&#xA;    LinearFitModel()&#xA;    LinearFitPlot()&#xA;    QuadraticFitPlot()&#xA;    SinFitPlot()&#xA;3D Graphing&#xA;    Plot3D(2cos(x) * sin(y))&#xA;3D Parametric Plots&#xA;Sliders&#xA;    Slider(n, 1..50)&#xA;    Slider(a, 2, 10, 0.1)&#xA;Scripting&#xA;    one = 1&#xA;    two = 2&#xA;    one + two&#xA;    cube(x) = x^3&#xA;    cube(5)&#xA;    for [row, column] in data&#xA;    end&#xA;Lists&#xA;    1:100&#xA;    [1,2,3] * [4,5,6]&#xA;Matrices&#xA;    [[1,2], [3,4]] * [[5,6], [7,8]]&#xA;    Inverse([a,b], [c,d])&#xA;    Identity(5)&#xA;Units&#xA;    2@feet + 24@inches&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;working-copy&#34;&gt;&#xA;  Working Copy&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#working-copy&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h1 id=&#34;mac&#34;&gt;&#xA;  mac&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#mac&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;操作&#xA;    四指&#xA;        向内：启动台&#xA;        向外：桌面&#xA;    三指&#xA;        左右：切桌面&#xA;        向上：app列表&#xA;        向下：expose(单程序多窗口)&#xA;    二指&#xA;        上下：滚动&#xA;        左右：前进后退&#xA;        右边：通知中心&#xA;        缩放,旋转&#xA;        点一下：菜单&#xA;        点二下：小缩放&#xA;    一指&#xA;        点一下：选中&#xA;        点二下：打开&#xA;        点一段：拖&#xA;        点二段：查询&#xA;快捷键&#xA;    系统：&#xA;        锁屏：control + command + q&#xA;        关屏：shift + control + 关机&#xA;        注销：shift + command + q &#xA;        睡眠：option + command + 关机&#xA;        强退：control + command + 关机&#xA;    程序坞： option + command + d&#xA;    调度中心：&#xA;        app列表: control + 上&#xA;        expose: control + 下&#xA;        左右桌面：control + 左右&#xA;        桌面：f11&#xA;    窗口：&#xA;        切换：command + tab&#xA;        程序内切换：command + `&#xA;        关闭：command + w&#xA;        退出：command + q&#xA;        强制退出：option + command + esc&#xA;        隐藏：command + h&#xA;        最大化: control + command + f&#xA;        最小化：command + m&#xA;        放大、缩小：command + +和-&#xA;        新标签：command + t&#xA;        新建: command + n&#xA;        打开：command + o&#xA;        保存：command + s&#xA;        另存为：shift + command + s&#xA;        刷新：command + r&#xA;        打印：command + p&#xA;        搜索：command + f&#xA;    文件： &#xA;        全选、复制、剪切、粘贴、撤销: command + a c x v z &#xA;        粘贴移到: option + command + v&#xA;        删除: command + return&#xA;    访达：&#xA;        预览：空格&#xA;        简介：command + i&#xA;    回收站：&#xA;        清空：shift + command + return&#xA;    截屏：&#xA;        整屏存文件：shift + command + 3&#xA;        区域存文件：shift + command + 4&#xA;        窗口区域：shift + command + 4 + 空格&#xA;        录屏：shift + command + 5&#xA;    输入法：control + 空格&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;命令&#34;&gt;&#xA;  命令&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%91%bd%e4%bb%a4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;brew&#xA;    update              # 更新brew&#xA;    search&#xA;    install&#xA;    remove&#xA;    upgrade&#xA;    tap                 # 安装扩展&#xA;    options             # 查看安装选项&#xA;    info&#xA;    home                # 访问包官网&#xA;    services&#xA;        list            # 查看已安装&#xA;        cleanup         # 清除无用配置&#xA;        restart         # 重启&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Jetbrains</title>
      <link>https://ukeate.com/docs/tool/develop/jetbrains/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ukeate.com/docs/tool/develop/jetbrains/</guid>
      <description>&lt;h1 id=&#34;intellij-idea&#34;&gt;&#xA;  Intellij Idea&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#intellij-idea&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;注意&#xA;    Project 相当于workspace, module 相当于工程&#xA;注册&#xA;    服务器&#xA;        # 发布网站 http://idea.lanyus.com&#xA;        http://idea.qinxi1992.cn&#xA;        http://idea.lianghongbo.com/licens&#xA;        http://im.js.cn:8888&#xA;javaagent&#xA;    https://zhile.io/&#xA;&#xA;快捷键&#xA;    settings -&amp;gt; Keymap 设置eclipse&#xA;        alt + enter     # 改错&#xA;        shift shift     # 搜索跳转&#xA;    shift + f4          # 新窗口打开文件&#xA;类注释&#xA;    settings -&amp;gt; Editor -&amp;gt; File and Code Templates -&amp;gt; Includes -&amp;gt; File Header&#xA;       /**  &#xA;        *&#xA;        * @Description: ${Description}&#xA;        * @author: ShenWenqing&#xA;        * @date: Created on ${DATE} ${TIME}&#xA;        *&#xA;        */&#xA;alt + enter 可生成 serialVersionUID&#xA;    settings -&amp;gt; Inspections&#xA;        勾选 Serializable class without &#39;serialVersionUID&#39;&#xA;JDK&#xA;    Project Settings -&amp;gt; Project&#xA;    settings -&amp;gt; Build Tools&#xA;    settings -&amp;gt; Compilers&#xA;编码&#xA;    file -&amp;gt; settings -&amp;gt; appearence里use custom font设置中文字体&#xA;    file -&amp;gt; settings -&amp;gt; editor -&amp;gt; file encodings 三处utf-8&#xA;    idea安装目录/bin/idea.vmoptions和idea64.vmoptions,最后添加&#xA;        -Dfile.encoding=UTF-8&#xA;    .idea/encodings.xml里删除除了UTF-8的项&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;插件&#34;&gt;&#xA;  插件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8f%92%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;.env files supoort&#xA;.ignore&#xA;BinEd&#xA;EasyYapi&#xA;EnvFile&#xA;Extra Icons&#xA;File Expander&#xA;Free MyBatis plugin&#xA;GitToolBox&#xA;IdeaVim&#xA;jclasslib Bytecode Viewer&#xA;JMH Java Microbenchmark Harness&#xA;LeetCode Editor&#xA;Lua&#xA;MapStruct Support&#xA;Maven Helper&#xA;Presentation Assistant&#xA;Rainbow Brackets&#xA;Save Actions&#xA;Solarized Theme&#xA;Solarized Themes&#xA;SonarLint&#xA;Statistic&#xA;Tabnine AI Code Completion&#xA;EmmyLua&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;webstorm&#34;&gt;&#xA;  webstorm&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#webstorm&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h1 id=&#34;pycharm&#34;&gt;&#xA;  pycharm&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#pycharm&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h1 id=&#34;goland&#34;&gt;&#xA;  goland&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goland&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h1 id=&#34;clion&#34;&gt;&#xA;  clion&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#clion&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h1 id=&#34;phpcharm&#34;&gt;&#xA;  phpCharm&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#phpcharm&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
  </channel>
</rss>
