<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ukeate的笔记</title>
    <link>https://ukeate.com/docs/pl/markup_language/</link>
    <description>Recent content on ukeate的笔记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://ukeate.com/docs/pl/markup_language/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Html</title>
      <link>https://ukeate.com/docs/pl/markup_language/html/</link>
      <pubDate>Tue, 09 Oct 2018 16:42:05 +0800</pubDate>
      <guid>https://ukeate.com/docs/pl/markup_language/html/</guid>
      <description>&lt;h1 id=&#34;事件&#34;&gt;&#xA;  事件&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%8b%e4%bb%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;blur&#xA;change&#xA;click&#xA;dblclick&#xA;focus&#xA;keydown&#xA;keypress&#xA;keyup&#xA;load&#xA;mousedown&#xA;mousemove&#xA;mouseout&#xA;mouseover&#xA;mouseup&#xA;reset&#xA;select&#xA;submit&#xA;unload&#xA;&#xA;Abort&#xA;    # 中断图片下载时激发&#xA;AfterPrint&#xA;    # 打印文档后激发&#xA;AfterUpdate&#xA;    # 传送完数据&#xA;BeforeCopy&#xA;    # 复制到剪贴板前&#xA;BeforeCut&#xA;    # 剪切到剪贴板前&#xA;BeforeEditFocus&#xA;BeforePaste&#xA;BeforePrint&#xA;BeforeUnload&#xA;BeforeUpdate&#xA;Bounce&#xA;CellChange&#xA;CtextMenu&#xA;Copy&#xA;Cut&#xA;DataAvailable&#xA;DatasetChanged&#xA;DatasetComplete&#xA;Drag&#xA;DragDrop&#xA;DragEnd&#xA;DragEnter&#xA;DragLeave&#xA;DragOver&#xA;DragStart&#xA;Drop&#xA;Error&#xA;ErrorUpdate&#xA;FilterChange&#xA;Finish&#xA;Help&#xA;LoseCapture&#xA;Move&#xA;Paste&#xA;&#xA;PropertyChange&#xA;ReadyStateChange&#xA;Resize&#xA;RowEnter&#xA;RowExit&#xA;RowsDelete&#xA;RowsInserted&#xA;Scroll&#xA;SelectStart&#xA;Start&#xA;Stop&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;标签&#34;&gt;&#xA;  标签&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a0%87%e7%ad%be&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;var&amp;gt;               # 标识常量&#xA;&amp;lt;samp&amp;gt;              # 标识输出内容的样式&#xA;&amp;lt;pre&amp;gt;               # 代码块&#xA;&amp;lt;code&amp;gt;              # 一段代码&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;属性&#34;&gt;&#xA;  属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;全局属性&#xA;    # 配置所有元素共有行为&#xA;    accesskey&#xA;        # 快捷键&#xA;        ## 需要按alt + 指定的键&#xA;    class&#xA;    contenteditable&#xA;        # 内容是否可修改, 如p标签&#xA;    contextmenu&#xA;        # 定义右键菜单，未实现&#xA;    dir&#xA;        # 文字对齐方式&#xA;    draggable&#xA;    dropzone&#xA;    hidden&#xA;    id&#xA;    lang&#xA;    spellcheck&#xA;    style&#xA;    tabindex&#xA;        # tab键切换元素的顺序&#xA;    title&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;浏览器特性&#34;&gt;&#xA;  浏览器特性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b5%8f%e8%a7%88%e5%99%a8%e7%89%b9%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;视频播放 &#xA;    支持vaapi, chrome 加上--enable-vaapi参数可以开启硬件加速解码&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;方案&#34;&gt;&#xA;  方案&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%96%b9%e6%a1%88&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;标签&#xA;    &amp;lt;input&amp;gt;表单&#xA;        单选框&#xA;        &amp;lt;input type=&amp;quot;radio&amp;quot; name=&amp;quot;name&amp;quot; checked value=&amp;quot;1&amp;quot;&amp;gt;&#xA;        &amp;lt;input type=&amp;quot;radio&amp;quot; name=&amp;quot;name&amp;quot; value=&amp;quot;1&amp;quot;&amp;gt;&#xA;        下拉框&#xA;        &amp;lt;select id=&amp;quot;mySelect&amp;quot; size=10 multiple&amp;gt;    # 长度等于10 ，多选&#xA;            &amp;lt;option selected=&amp;quot;selected&amp;quot;&amp;gt;Apple&amp;lt;/option&amp;gt;&#xA;            &amp;lt;option&amp;gt;Orange&amp;lt;/option&amp;gt;&#xA;        &amp;lt;/select&amp;gt;&#xA;        勾选框&#xA;        &amp;lt;input type=&amp;quot;checkbox&amp;quot; name=&amp;quot;&amp;quot; /&amp;gt;&#xA;        按钮&#xA;        &amp;lt;input type=&amp;quot;button&amp;quot;/&amp;gt;&#xA;        &amp;lt;button&amp;gt;                # &amp;lt;button&amp;gt;&amp;lt;img src=&amp;quot;&amp;quot;&amp;gt;搜索&amp;lt;/button&amp;gt;        button之间可以加图片&#xA;        &#xA;    &amp;lt;table&amp;gt;表格&#xA;        &amp;lt;caption&amp;gt; # 标题&#xA;        &amp;lt;thead&amp;gt;&#xA;            &amp;lt;th&amp;gt;&#xA;                &amp;lt;td&amp;gt;&amp;lt;td&amp;gt;&#xA;            &amp;lt;/th&amp;gt;&#xA;        &amp;lt;tbody&amp;gt;&#xA;            &amp;lt;tr&amp;gt;&#xA;                &amp;lt;td&amp;gt;&amp;lt;td&amp;gt;&#xA;            &amp;lt;/tr&amp;gt;&#xA;        &amp;lt;tfoot&amp;gt;&#xA;            属性&#xA;                &amp;lt;tr style=&amp;quot;display: none;&amp;quot;&amp;gt;                # 设置属性为隐藏&#xA;&#xA;    &amp;lt;form&amp;gt;表单&#xA;        enctype属性&#xA;            application/x-www-form-urlencoded(默认)                # 在发送编码所有字符（空格转换为 &amp;quot;+&amp;quot; 加号，特殊符号转换为 ASCII HEX 值）&#xA;            multipart/form-data                                                        # 不对字符进行编码，在上传文件时使用&#xA;            text/plain                                                                        # 空格转换为+，但是不对特殊字符进行编码&#xA;            &#xA;    &amp;lt;hr&amp;gt;分割线&#xA;&#xA;    字体&#xA;        &amp;lt;h1&amp;gt;&amp;lt;/h1&amp;gt;  ...  &amp;lt;h6&amp;gt;&amp;lt;h6&amp;gt;标题标签对&#xA;        &#xA;        &amp;lt;b&amp;gt;粗体&amp;lt;/b&amp;gt;&amp;lt;i&amp;gt;斜体&amp;lt;/i&amp;gt;&amp;lt;u&amp;gt;下划线&amp;lt;/u&amp;gt;&amp;lt;tt&amp;gt;打字机风格&amp;lt;/tt&amp;gt;&amp;lt;cite&amp;gt;引用&amp;lt;/cite&amp;gt;&amp;lt;em&amp;gt;强调（斜体粗体）&amp;lt;/em&amp;gt;&amp;lt;strong&amp;gt;重要（黑体加粗体）&amp;lt;/strong&amp;gt;&#xA;        &#xA;        &amp;lt;sub&amp;gt;下标&amp;lt;/sub&amp;gt;&amp;lt;sup&amp;gt;上标&amp;lt;/sup&amp;gt;&#xA;        &#xA;        &amp;lt;font size =-7到+7  coler = 颜色&amp;gt;&amp;lt;/font&amp;gt;&#xA;&#xA;    &amp;lt;img src=&amp;quot;&amp;quot;/&amp;gt;图片&#xA;        属性&#xA;            alt                # 规定图像的替代文本&#xA;            border&#xA;            width&#xA;            height&#xA;&#xA;    &amp;lt;span&amp;gt;与 &amp;lt;div&amp;gt;&#xA;        &amp;lt;span&amp;gt; 在CSS定义中属于一个行内元素,在行内定义一个区域，也就是一行内可以被 &amp;lt;span&amp;gt; 划分成好几个区域&#xA;        ，从而实现某种特定效果。 &amp;lt;span&amp;gt; 本身没有任何属性。&#xA;        &amp;lt;div&amp;gt; 在CSS定义中属于一个块级元素 &amp;lt;div&amp;gt; 可以包含段落、标题、表格甚至其它部分。&#xA;        这使DIV便于建立不同集成的类，如章节、摘要或备注。在页面效果上，使用 &amp;lt;div&amp;gt; 会自动换行，使用 &amp;lt;span&amp;gt; 就会保持同行。&#xA;        &#xA;        &amp;lt;span&amp;gt;没有内边距&#xA;        &#xA;    &amp;lt;label&amp;gt;标签&#xA;        标记通常以下面两种方式中的一种来和表单控件相联系：将表单控件作为标记标签的内容，这样的就是隐式形式&#xA;        ，或者为 &amp;lt;label&amp;gt; 标签下的 for 属性命名一个目标表单 id，这样就是显式形式。&#xA;&#xA;        例如，在 XHTML 中：&#xA;            显式的联系：&#xA;            &amp;lt;label for=&amp;quot;SSN&amp;quot;&amp;gt;Social Security Number:&amp;lt;/label&amp;gt;&#xA;            &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;SocSecNum&amp;quot; id=&amp;quot;SSn&amp;quot; /&amp;gt;&#xA;            &#xA;            隐式的联系：&#xA;            &amp;lt;label&amp;gt;Date of Birth: &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;DofB&amp;quot; /&amp;gt;&amp;lt;/label&amp;gt;&#xA;&#xA;    &amp;lt;head&amp;gt;标签&#xA;        &amp;lt;base&amp;gt; 标签为页面上的所有链接规定默认地址或默认目标。&#xA;        &amp;lt;meta http-equiv=&amp;quot;pragma&amp;quot; content=&amp;quot;no-cache&amp;quot;&amp;gt;        定义响应信息头&#xA;        &amp;lt;meta name=&amp;quot;keywrods&amp;quot; content=&amp;quot;keyword1,keyword2&amp;quot;&amp;gt;        关键字&#xA;        ＜meta name=&amp;quot;description&amp;quot; content=&amp;quot;This page is about the meaning of science, education,culture.&amp;quot;＞        网站主要内容&#xA;        ＜meta name=&amp;quot;robots&amp;quot; content=&amp;quot;none&amp;quot;＞        机器人索引 content的参数有all,none,index,noindex,follow,nofollow。默认是all。 &#xA;        ＜meta name=&amp;quot;author&amp;quot; content=&amp;quot;outrun&amp;quot;＞                作者&#xA;        &#xA;    &amp;lt;marquee behavior = &amp;quot;alternate&amp;quot;&amp;gt;  文字行为                # alternate为来回滚动&#xA;        &amp;lt;font size = 30 color = &amp;quot;red&amp;quot;&amp;gt;www.it315.org&amp;lt;/font&amp;gt;&amp;lt;/marquee&amp;gt;&#xA;        &amp;lt;marquee behavior = &amp;quot;slide&amp;quot; &amp;quot;scroll&amp;quot; &amp;quot;alternate&amp;quot; direction=&amp;quot;up&amp;quot;&amp;quot;down&amp;quot;&amp;quot;left&amp;quot;&amp;quot;right&amp;quot;&amp;gt;你好&amp;lt;/marquee&amp;gt;&#xA;        &#xA;    &amp;lt;nobr&amp;gt; 标签之间的文字在浏览器中不换行显示&#xA;        &amp;lt;NOBR&amp;gt;这里是一行不该换行的文本 . . .&#xA;        这是文本行的结尾。&amp;lt;/NOBR&amp;gt;&#xA;&#xA;    &amp;lt;pre&amp;gt;&amp;lt;/pre&amp;gt;        标签之间的文字在浏览器中换行显示&#xA;        &#xA;    &amp;lt;blockquote&amp;gt;&amp;lt;/blockquote&amp;gt;缩进&#xA;&#xA;    条目标签&#xA;        &amp;lt;dl&amp;gt;&#xA;            &amp;lt;dt&amp;gt;&#xA;                &amp;lt;dd&amp;gt;&#xA;                &amp;lt;/dd&amp;gt;&#xA;            &amp;lt;/dt&amp;gt;&#xA;        &amp;lt;/dl&amp;gt;显示条目&#xA;&#xA;        &amp;lt;ol&amp;gt;&#xA;            &amp;lt;li&amp;gt;&#xA;            &amp;lt;/li&amp;gt;&#xA;        &amp;lt;/ol&amp;gt;数字标签列表&#xA;&#xA;        &amp;lt;ul&amp;gt;&#xA;            &amp;lt;li&amp;gt;&#xA;            &amp;lt;/li&amp;gt;&#xA;        &amp;lt;/ul&amp;gt;圆点标签列表&#xA;        &#xA;    &amp;lt;a&amp;gt;标签&#xA;        发送邮件&#xA;        &amp;lt;a href = &amp;quot;mailto:admin@it315.org?subject=咨询&amp;quot;&amp;gt;我要留言&amp;lt;/a&amp;gt;&#xA;                如：mailto:zxx@it315.org?cc=dreamdu@sina.com&amp;amp;subject=Feedback&amp;amp;body=how%20are%20you  # subject body cc 等用url参数拼接的方式拼接&#xA;                        %20代表空格 &#xA;                        subject= 是标题&#xA;                        body= 是邮件内容&#xA;                        CC=是抄送  &#xA;                        BCC=是暗送&#xA;&#xA;        新窗口&#xA;                &amp;lt;a target=&amp;quot;_blank&amp;quot; href=&amp;quot;&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;&amp;quot;/&amp;gt;&amp;lt;/a&amp;gt;打开新窗口&#xA;        属性&#xA;        &amp;lt;a name =&amp;quot;mark1&amp;quot;/&amp;gt;&#xA;        &amp;lt;a href=&amp;quot;text.html#mark1&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;定位&#xA;        &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;打开自己&#xA;        &amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;打开目录&#xA;&#xA;    &amp;lt;map&amp;gt;&amp;lt;/map&amp;gt;定义热点映射4&#xA;        &amp;lt;area&amp;gt;&amp;lt;/area&amp;gt;来说明 属性shape形状，coords坐标，href或nohref，target赖志明浏览器的哪个窗口或帧中显示&#xA;        &amp;lt;img&amp;gt;标签中增加名为usemap的属性来指定图像被用做图像地图，其设置值为图像热点名称 如&amp;lt;img src=&amp;quot;&amp;quot; usemap=&amp;quot;#mymap&amp;quot;&amp;gt;&#xA;        &amp;lt;img src=&amp;quot;logo.gir&amp;quot; border=0 usemap=&amp;quot;#mymap&amp;quot;&amp;gt;&#xA;        &amp;lt;map name=mymap&amp;gt;&#xA;        &amp;lt;area shape=&amp;quot;rect&amp;quot; coords=&amp;quot;0,0,50,50&amp;quot; href=&amp;quot;&amp;quot;&amp;gt;  左上和右下坐标 shape的属性值 rect poly circle&#xA;        &amp;lt;/map&amp;gt;&#xA;&#xA;    &amp;lt;embed&amp;gt;&amp;lt;/embed&amp;gt;标签 添加swf类型flash元素&#xA;        scale=&amp;quot;noscale&amp;quot;                # 没有比例缩放&#xA;        wmode=&amp;quot;transparent&amp;quot;                # 背景透明&#xA;&#xA;样式&#xA;    小图标&#xA;        &amp;lt;link rel=&amp;quot;Shortcut Icon&amp;quot; href=&amp;quot;../imgs/favicon48.ico&amp;quot;&amp;gt;  # 网页小图标&#xA;        &amp;lt;link rel=&amp;quot;Bookmark&amp;quot; href=&amp;quot;../imgs/favicon48.ico&amp;quot;&amp;gt;                        # 收藏夹小图标&#xA;        &#xA;行为&#xA;    url标准&#xA;        基准url + 相对 url = 完整url&#xA;            http://www.it315.org/index.html#section2%E5%AE%9A%E4%BD%8D%E5%88%B0section2&#xA;                &#xA;        url中空格必须转换为+&#xA;        url中用字符的当前字符集编码在内存中的十六进制格式表示，并在每个字节前加上%&#xA;        如果确信特殊字符不会引起冲突，也可以直接传递给服务器，如汉字。也可以一部分编码，一部分不编码，如中&amp;amp;国 就是 中%26国&#xA;&#xA;&#xA;    文件下载&#xA;        超链接post提交&#xA;            &amp;lt;form action=&amp;quot;${pageContext.request.contextPath }/downloadFile&amp;quot;        method=&amp;quot;post&amp;quot; enctype=&amp;quot;application/x-www-form-urlencoded&amp;quot;&amp;gt;&#xA;                &amp;lt;input type=&amp;quot;hidden&amp;quot; name=&amp;quot;uuidFileName&amp;quot; value=&amp;quot;&amp;quot; /&amp;gt;&#xA;                &amp;lt;a href=&amp;quot;#&amp;quot; onclick=&amp;quot;download(&#39;${fileName}&#39;)&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&#xA;            &amp;lt;/form&amp;gt;                &#xA;            &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;&#xA;                function download(fileName) {&#xA;                    $(&amp;quot;:hidden&amp;quot;).val(fileName);&#xA;                    document.forms[0].submit();&#xA;                }&#xA;            &amp;lt;/script&amp;gt;&#xA;    根目录&#xA;        &amp;lt;head&amp;gt;&#xA;        &amp;lt;base href=&amp;quot;http://www.w3school.com.cn/i/&amp;quot; target=&amp;quot;_blank&amp;quot; /&amp;gt;                # href必选, target可选&#xA;                                                                                        ## js中的相对目录也起作用&#xA;        &amp;lt;/head&amp;gt;&#xA;    frameset&#xA;        frameset的例子&#xA;            &amp;lt;frameset rows=&amp;quot;70,*&amp;quot; cols=&amp;quot;*&amp;quot; frameborder=&amp;quot;no&amp;quot; border=&amp;quot;0&amp;quot; framespacing=&amp;quot;0&amp;quot;&amp;gt;&#xA;            &amp;lt;frame src=&amp;quot;head.html&amp;quot; name=&amp;quot;topFrame&amp;quot; scrolling=&amp;quot;No&amp;quot; noresize=&amp;quot;noresize&amp;quot; id=&amp;quot;topFrame&amp;quot; /&amp;gt;&#xA;            &amp;lt;frameset cols=&amp;quot;193,*&amp;quot; frameborder=&amp;quot;no&amp;quot; border=&amp;quot;0&amp;quot; framespacing=&amp;quot;0&amp;quot;&amp;gt;&#xA;                &amp;lt;frame src=&amp;quot;left.html&amp;quot; scrolling=&amp;quot;No&amp;quot; noresize=&amp;quot;noresize&amp;quot; id=&amp;quot;leftFrame&amp;quot; /&amp;gt;&#xA;                &amp;lt;frame src=&amp;quot;main.html&amp;quot; name=&amp;quot;mainFrame&amp;quot; id=&amp;quot;mainFrame&amp;quot; /&amp;gt;&#xA;            &amp;lt;/frameset&amp;gt;&#xA;            &amp;lt;/frameset&amp;gt;&#xA;            &#xA;            # 在head.html 中的标签中添加链接&#xA;            ## &amp;lt;a href=&amp;quot;/a.html&amp;quot; target=&amp;quot;mainFrame&amp;quot;&amp;gt;Frame main.html&amp;lt;/a&amp;gt;&#xA;            ## 就可以使name 为 mainFrame的&amp;lt;frame&amp;gt;窗体刷新&#xA;            &#xA;            # 在src属性后面添加#name，可以跳转到指定名子的框架&#xA;            ## &amp;lt;frame src=&amp;quot;/example/html/link.html#C10&amp;quot;&amp;gt;跳转到link.html页面的：&amp;lt;a name=&amp;quot;C10&amp;quot;&amp;gt;&amp;lt;h2&amp;gt;Chapter 10&amp;lt;/h2&amp;gt;&amp;lt;/a&amp;gt;位置&#xA;            ## 也可以在a标签中设置跳转&amp;lt;a href=&amp;quot;/example/html/link.html#C10&amp;quot; target=&amp;quot;showframe&amp;quot;&amp;gt;带有锚的链接&amp;lt;/a&amp;gt;&#xA;&#xA;        内联框架：iframe 的例子&#xA;            &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;&#xA;            function changeUrl(vPageName){&#xA;            var vIfr=document.getElementById(&amp;quot;ifrObj&amp;quot;);&#xA;            vIfr.src=vPageName+&amp;quot;.asp&amp;quot;;&#xA;            }&#xA;            &amp;lt;/script&amp;gt;&#xA;            &amp;lt;iframe id=&amp;quot;ifrObj&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&#xA;            &amp;lt;a href=&amp;quot;javascript:changeUrl(&#39;2&#39;)&amp;quot;&amp;gt;a&amp;lt;/a&amp;gt;&#xA;            &amp;lt;a href=&amp;quot;javascript:changeUrl(&#39;3&#39;)&amp;quot;&amp;gt;b&amp;lt;/a&amp;gt; &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;svg&#34;&gt;&#xA;  svg&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#svg&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;介绍&#xA;    scalable vector graphics, 可缩放矢量图形&#xA;    使用xml格式定义图像&#xA;    由w3c定制&#xA;例子&#xA;    &amp;lt;svg xmlns=&amp;quot;http://www.w3.org/2000/svg&amp;quot; version=&amp;quot;1.1&amp;quot;&amp;gt;&#xA;        &amp;lt;rect width=&amp;quot;300&amp;quot; height=&amp;quot;100&amp;quot; style=&amp;quot;fill:rgb(0, 0, 255); stroke-width:1; stroke:rgb(0, 0, 0)&amp;quot;&amp;gt;&amp;lt;/rect&amp;gt;&#xA;            # 矩形&#xA;    &amp;lt;/svg&amp;gt;&#xA;滤镜&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Css</title>
      <link>https://ukeate.com/docs/pl/markup_language/css/</link>
      <pubDate>Tue, 09 Oct 2018 16:27:24 +0800</pubDate>
      <guid>https://ukeate.com/docs/pl/markup_language/css/</guid>
      <description>&lt;h1 id=&#34;基础&#34;&gt;&#xA;  基础&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e7%a1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;# cascading style sheet&#xA;层级匹配&#xA;    不同级&#xA;        1. style属性&#xA;        2. style标签&#xA;        3. link标签&#xA;        4. 浏览器中用户自定义样式表&#xA;        5. 浏览器默认样式             # 浏览器对每个元素定义了默认的样式表&#xA;    !important&#xA;        color: black !important&#xA;    同级                            # 评估得出最特殊的样式, 评分相同时，使用最后的&#xA;        1. id值的数目&#xA;        2. 其它属性和伪类的数目&#xA;        3. 元素名和伪元素的数目&#xA;继承&#xA;    部分元素继承父元素样式&#xA;        外观继承&#xA;        布局不继承&#xA;    inherit                         # 指明使用父元素样式&#xA;        border: inherit    &#xA;三种引入方式&#xA;    内联式&#xA;        &amp;lt;div style=&amp;quot;color:#000;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&#xA;    嵌入式&#xA;        &amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;&#xA;            div {color:#000;}&#xA;        &amp;lt;/style&amp;gt;&#xA;    引用式&#xA;        &amp;lt;link href=&amp;quot;css.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; /&amp;gt;&#xA;        @&#xA;            @charset &amp;quot;UTF-8&amp;quot;        # 默认UTF-8, 在import前&#xA;            @import &amp;quot;styles.css&amp;quot;    # 静态引用, 效率比&amp;lt;link&amp;gt;标签慢&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;单位&#34;&gt;&#xA;  单位&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8d%95%e4%bd%8d&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;颜色&#xA;    名称, 如silver, gray&#xA;    0xffffff&#xA;    rgb(112, 128, 144)&#xA;    rgb(112, 128, 114, 0.4)&#xA;    hsl(120, 100%, 22%)         # 色相(hue), 饱和度(saturation), 明度(lightness)&#xA;    hsl(120, 100%, 22%, 0.4)&#xA;长度&#xA;    绝对单位                      # 只有在打印和设计文档时才用绝对单位&#xA;        cm&#xA;        pt                      # 磅&#xA;        in                      # 英寸&#xA;        mm&#xA;        pc                      # pica 等于12磅&#xA;    相对长度&#xA;        em                      # 元素字号&#xA;        ex                      # 元素字体的&#39;x高度&#39;，字体基线到中线的距离，一般与x的高度相当，大致等于0.5em&#xA;        rem                     # 根元素(html元素)字号&#xA;        px                      # css像素，假定了设备的分辨率为96dpi, 是1英寸的1/96(windows系统标准像素密度, 其它平台浏览器自己转换), css在定义中px是相对单位，但浏览器实现中全是绝对单位&#xA;        %                       # 不是所有元素都可以用, 不同属性中%定义不同，如font-size挂钩继承的font-size值, width挂钩元素包含块的宽度&#xA;    算式                        # css3 未得到广泛支持&#xA;        width: calc(80% - 20px);&#xA;角度&#xA;    deg                         # 度, 0 - 360&#xA;    grad                        # 百分度 0 - 400&#xA;    rad                         # 弧度 0 - 6.28&#xA;    turn                        # 圆周 1 turn = 360 deg&#xA;时间&#xA;    s&#xA;    ms&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;选择器&#34;&gt;&#xA;  选择器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%80%89%e6%8b%a9%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;*                               # 所有元素&#xA;&amp;lt;type&amp;gt;                          # 标签&#xA;.&amp;lt;class&amp;gt;                        # 样式&#xA;#&amp;lt;id&amp;gt;                           # id&#xA;[attr]                          # 属性, 如[title] {}&#xA;[attr=&amp;quot;val&amp;quot;]&#xA;[attr^=&amp;quot;val&amp;quot;]                   # 以val开头&#xA;[attr$=&amp;quot;val&amp;quot;]&#xA;[attr*=&amp;quot;val&amp;quot;]                   # 包含val&#xA;[attr~=&amp;quot;val&amp;quot;]                   # 属性多值有val, 空格隔开&#xA;    [class~=&amp;quot;class2&amp;quot;] {}&#xA;[attr|=&amp;quot;val&amp;quot;]                   # 属性多值有val, - 隔开&#xA;    [lang |=&amp;quot;en&amp;quot;] &#xA;&amp;lt;selector&amp;gt;, &amp;lt;selector&amp;gt;          # 同时匹配&#xA;&amp;lt;selector&amp;gt; &amp;lt;selector&amp;gt;           # 后代&#xA;&amp;lt;selector&amp;gt; &amp;gt; &amp;lt;selector&amp;gt;         # 直接后代&#xA;&amp;lt;selector&amp;gt; + &amp;lt;selector&amp;gt;         # p 之后的第一个兄弟a&#xA;&amp;lt;selector&amp;gt; ~ &amp;lt;selector&amp;gt;         # p 之后所有兄弟a&#xA;&#xA;o-&amp;gt; 伪元素                       # 直接使用匹配所有&#xA;::first-line                    # 块级元素文本首行&#xA;::first-letter                  # 块级元素文本首字母&#xA;:before                         # 之前插入内容&#xA;    {content: &#39;a&#39;}&#xA;:after                          # 之后插入内容&#xA;&#xA;o-&amp;gt; 伪类                         # 直接使用匹配所有&#xA;:root                           # 文档根元素, 总是返回html元素&#xA;:first-child                    # 第一子元素&#xA;    p &amp;gt; span: first-child , p 下面第一个span元素&#xA;:last-child&#xA;:only-child                     # 只有一个子元素的该元素&#xA;:only-of-type                   # 同上但指定类型，直接使用时会匹配更多，因为很多某类型的唯一元素&#xA;:nth-child(n)                   # body &amp;gt; :nth-child(2)&#xA;:nth-last-child(n)&#xA;:nth-of-type(n)&#xA;:nth-last-of-type(n)&#xA;&#xA;o-&amp;gt; UI  伪类&#xA;:enabled                        # 已启用的元素&#xA;:disabled                       # 禁用的元素&#xA;:checked                        # 选中的单选或复选按钮&#xA;:default                        # 默认的元素, 如 &amp;lt;button type=&amp;quot;submit&amp;quot;&amp;gt;, 常和outline属性一起使用&#xA;:valid                          # 输入验证有效的元素&#xA;:invalid&#xA;:in-range                       # 范围内的input元素, 未广泛支持&#xA;:out-of-range&#xA;:required                       # 允许使用required属性的input元素&#xA;:optional                       # 非required&#xA;&#xA;o-&amp;gt; 动态伪类&#xA;:link                           # 未访问的a元素&#xA;:visited                        # 已访问过的a元素&#xA;:hover&#xA;:active                         # 当前激活的元素(鼠标按下)&#xA;:focus                          # 获得焦点的元素&#xA;:not(&amp;lt;selector&amp;gt;)                # a:not([href*=&amp;quot;apress&amp;quot;])&#xA;:empty                          # 无子元素的元素&#xA;:lang(&amp;lt;language&amp;gt;)               # lang属性为指定值&#xA;    :lang(en) 匹配 &amp;lt;a lang=&amp;quot;en-us&amp;quot;&amp;gt;&#xA;:target                         # url hash(片段标识符) 定向id所在的元素&#xA;&#xA;例子&#xA;    o-&amp;gt;&#xA;    span.class2 {}&#xA;&#xA;    o-&amp;gt;&#xA;    body &amp;gt; * &amp;gt; span, tr &amp;gt; th {}&#xA;&#xA;    o-&amp;gt; 计数器&#xA;    body {counter-reset: paracount;}&#xA;    p:before {&#xA;        content: counter(paracount) &amp;quot; &amp;quot;;&#xA;        counter-increment: paracount;&#xA;            # counter-increment: paracount 2; 可以增加2&#xA;    }&#xA;&#xA;    o-&amp;gt;&#xA;    :checked + span&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;属性&#34;&gt;&#xA;  属性&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b1%9e%e6%80%a7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;布局&#34;&gt;&#xA;  布局&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b8%83%e5%b1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;position                        # 默认static, top等属性不起作用&#xA;    static&#xA;    absolute&#xA;    fixed                       # fixed滚动固定&#xA;    relative&#xA;left&#xA;right&#xA;top&#xA;bottom&#xA;&#xA;z-index&#xA;columns                         # 列数和列宽的简写属性&#xA;column-count                    # 多列布局的列数&#xA;    column-fill                 # 列间内容分布方式&#xA;    column-gap                  # 列间隔&#xA;    column-rule                 # 列间规则的简写属性&#xA;    column-rule-color&#xA;    column-rule-style&#xA;    column-rule-width&#xA;    column-span                 # 元素跨列数&#xA;    column-width&#xA;flex-align                      # 弹性盒子布局, 未实现&#xA;    flex-direction&#xA;    flex-order&#xA;    flex-pack&#xA;    -webkit-box-align           # 内容高度小于容器高度时&#xA;        # start(顶边放置), end(底边放置), center(中间放置), baseline, stretch(拉伸元素)&#xA;        -webkit-box-flex        # 元素可伸缩性&#xA;        -webkit-box-pack        # 元素伸缩到最大尺寸(max-width)时怎么做&#xA;            # start(左边放置), end(右边放置), center(中间放置), justify(平均分配到各个元素间)&#xA;        -webkit-box-direction   # 内部盒子排列顺序&#xA;例子&#xA;    o-&amp;gt; 多列布局&#xA;    column-count: 3;&#xA;    column-fill: balance;&#xA;    column-rule: medium solid black;&#xA;    column-gap: 1.5em;&#xA;    column-width: 10em;&#xA;&#xA;    o-&amp;gt; 弹性盒&#xA;    #container {&#xA;        display: -webkit-box;&#xA;        -webkit-box-direction: reverse;&#xA;        -webkit-box-align: end;&#xA;        -webkit-box-pack: justify;&#xA;    }&#xA;    #first {-webkit-box-flex: 3;}&#xA;    #second {-webkit-box-flex: 1;}&#xA;&#xA;    o-&amp;gt; css表格&#xA;    #table {display: table;}&#xA;    div.row {display: table-row;}&#xA;    p {display: table-cell;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;盒模型&#34;&gt;&#xA;  盒模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%9b%92%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;box-sizing                      # 尺寸样式(如width, height)应用到哪部分&#xA;    # content-box, padding-box, border-box, margin-box&#xA;display&#xA;    inline                      # 显示为文本行中的字&#xA;        inline时，忽略width, height, margin属性&#xA;    block                       # 显示为段落, 在垂直方向有所区别&#xA;    inline-block                # 显示为文本行, 整体作为inline, 但内部作为block, 这样认width, height, margin属性&#xA;    list-item                   # 显示为列表项&#xA;    run-in                      # 类型取决于周围元素&#xA;        包含display:block元素，就是block&#xA;        兄弟都是block时，为inline&#xA;        其它都为block&#xA;    compact                     # 为块或标记盒(类list-item), 一般不支持&#xA;    flexbox                     # 弹性盒布局用&#xA;        -webkit-box&#xA;    table                       # 表格布局用&#xA;        inline-table&#xA;        table-caption           # 类似caption&#xA;        table-row-group         # 类似tbody&#xA;        table-header-group      # 类似thead&#xA;        table-footer-group      # 类似tfoot&#xA;        table-row               # 类似tr&#xA;        table-column-group      # 类似colgroup&#xA;        table-column            # 类似col&#xA;        table-cell              # 类似td&#xA;    ruby                        # ruby注释的文本布局用&#xA;        ruby-base&#xA;        ruby-text&#xA;        ruby-base-group&#xA;        ruby-text-group&#xA;    none                        # 元素不可见，不占空间&#xA;float                           # 元素左边界或右边界移动到包含块或另一个浮动盒的边界。其余inline部分流式环绕&#xA;    left, right, none&#xA;clear                           # 左右边界不能挨着另外浮动元素&#xA;    left, right, both, none&#xA;padding&#xA;    padding-bottom&#xA;    padding-left&#xA;    padding-right&#xA;    padding-top&#xA;margin&#xA;    margin-bottom&#xA;    margin-left&#xA;    margin-right&#xA;    margin-top&#xA;height                          # 长度或百分比&#xA;width&#xA;    max-height&#xA;    max-width&#xA;    min-height&#xA;    min-width&#xA;overflow&#xA;    auto                        # 同scroll, 但自动加滚动条&#xA;    hidden                      # 剪掉&#xA;    on-content                  # 移除内容, 已废弃&#xA;    on-display                  # 隐藏内容, 已废弃&#xA;    scroll, visible             # 溢出&#xA;overflow-x&#xA;overflow-y&#xA;&#xA;visibility                      # 元素可见性&#xA;    collapse                    # 不可见，不占据空间, 只能用在表相关内容，如tr, td&#xA;    hidden                      # 不可见，占据空间&#xA;    visible&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;边框&#34;&gt;&#xA;  边框&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%be%b9%e6%a1%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;border                          # border: 30px dashed #000&#xA;border-width                    # 可以是长度值, 百分比, thin, medium, thick &#xA;    border-width: 15px 5px 15px 5px&#xA;border-style&#xA;    none 默认&#xA;    dashed 破折线&#xA;    dotted 圆点&#xA;    double 双线&#xA;    groove 槽线&#xA;    inset 内嵌效果&#xA;    outset 外凸效果&#xA;    ridge 脊线&#xA;    solid 实线&#xA;&#xA;    border-style: solid dotted dashed double 定义了上、右、下、左的样式&#xA;    border-style: none的时候，边框其它属性无意义&#xA;border-color&#xA;    blue rgb(25%, 35%, 45%) #909090 red;&#xA;border-image                    # 不广泛支持&#xA;    border-image-outset&#xA;    border-image-repeat&#xA;        stretch 拉伸&#xA;        repeat 平铺&#xA;        round 不截断下拉伸&#xA;        space不截断下图片间保留间距平铺&#xA;    border-image-slice&#xA;    border-image-source&#xA;    border-image-width&#xA;&#xA;    o-&amp;gt;&#xA;    -webkit-border-image, -moz-border-image, -o-border-image&#xA;    border-image: url(a.png) 30 / 50px round repeat; 九宫格切分长度都为30, 宽度为50, 横round, 竖repeat&#xA;border-left&#xA;    border-left-style&#xA;    border-left-color&#xA;    border-left-width&#xA;border-right&#xA;    border-right-color&#xA;    border-right-style&#xA;    border-right-width&#xA;border-top&#xA;    border-top-style&#xA;    border-top-color&#xA;border-top-width&#xA;border-top-left-radius&#xA;    border-top-left-radius: 20px 15px; x半径20, y半径15&#xA;border-top-right-radius&#xA;border-bottom&#xA;    border-bottom-style&#xA;    border-bottom-width&#xA;    border-bottom-color&#xA;    border-bottom-left-radius&#xA;    border-bottom-right-radius&#xA;border-radius&#xA;    border-radius: 20px / 15px;&#xA;    border-radius: 50% 20px 25% 5em / 25% 15px 40px 55%&#xA;&#xA;box-shadow&#xA;    box-shadow: hoffset voffset blur spread color inset&#xA;    水平偏移量, 正向右，负向左。垂直偏移量，正向下，负向上。模糊值。阴影延伸半径，正向各方向延伸，负缩小。颜色。内嵌阴影&#xA;    可设置多组阴影，用, 隔开&#xA;outline                         # 轮廓不属于页面，不影响布局, &amp;lt;颜色&amp;gt; &amp;lt;样式&amp;gt; &amp;lt;宽度&amp;gt;&#xA;    outline-color&#xA;    outline-offset              # 距元素边框边缘的偏移量&#xA;    outline-style               # 同border-style&#xA;    outline-width               # 同border-width&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;背景&#34;&gt;&#xA;  背景&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%83%8c%e6%99%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;# 不继承&#xA;background                      # background: &amp;lt;background-color&amp;gt; &amp;lt;background-position&amp;gt; &amp;lt;background-size&amp;gt; &amp;lt;background-repeat&amp;gt; &amp;lt;background-origin&amp;gt; &amp;lt;background--clip&amp;gt; &amp;lt;background-attachment&amp;gt; &amp;lt;background-image&amp;gt;&#xA;background-attachment           # 背景附着方式&#xA;    fixed 固定到视窗上, 不随文字滚动&#xA;    local 随文字滚动&#xA;    scroll 固定到元素上(使用浏览器的滚动条), 不随文字滚动&#xA;background-color                # 原点在border外边缘&#xA;    函数&#xA;        linear-gradient(transparent, rgba(0, 0, 0, 0.1) 20%, rgba(0, 0, 0, 0.5) 65%, rgba(0, 0, 0, 0.66))&#xA;            # 线性渐变 &#xA;background-image                # 原点在padding外边缘，也就是border内边缘&#xA;    background-image: url(&amp;quot;bg.jpg&amp;quot;)&#xA;background-position             # 起始位置, 可以是长度, top, left, right ,bottom, center, 第一个值控制垂直位置, 第二个值控制水平位置&#xA;    0px 0px                     # 左上偏移0, 0    &#xA;    right ？                    # 位置在右边显示&#xA;    left ？                     # 位置在左连显示(默认)&#xA;    ？ bottom&#xA;    center center               # 位置在中间显示、内容从中间开始显示(默认)&#xA;    ? top                       # 内容从上开始显示&#xA;background-repeat&#xA;    no-repeat&#xA;    repeat 水平和垂直同时平铺&#xA;    repeat-x 水平平铺&#xA;    repeat-y &#xA;    space 水平或垂直平铺, 统一间距,不截断, round 水平或垂直拉伸, 不截断&#xA;background-size                 # 可以长度值或百分比&#xA;    contain 等比缩放, 宽高适应匹配, 不超出容器&#xA;    cover 等比缩放, 宽高最大适应匹配, 可超出容器&#xA;    auto 本身尺寸显示&#xA;background-origin               # 定位显示原点&#xA;    border-box 边框盒子内 &#xA;    padding-box 内边距盒子内&#xA;    content-box 内容盒子内&#xA;background-clip                 # 裁剪, 属性同上&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;色彩&#34;&gt;&#xA;  色彩&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%89%b2%e5%bd%a9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;opacity&#xA;color                           # 前景颜色&#xA;    rgba(255, 255, 255, 0.7)&#xA;user-select                     # 用户不可选择&#xA;filter                          # 滤镜效果, ie8 或之前使用&#xA;    filter:alpha(opacity=50)，同opacity: .5&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;文本&#34;&gt;&#xA;  文本&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%96%87%e6%9c%ac&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;text-decoration                 # node时 a标签没有下划线&#xA;text-indent                     # 首行缩进&#xA;text-align&#xA;    start 语言的起始边界，可能是右&#xA;    end, left, right, center, justify&#xA;text-justify                    # text-align: justify时来指定规则&#xA;    auto&#xA;    none 禁用文本对齐&#xA;    inter-word 空白在单词之间&#xA;    inter-ideograph 中日韩&#xA;    inter-cluster 泰&#xA;    distribute, kashida 草体&#xA;text-transform                  # 转换大小写&#xA;    none, capitalize, uppercase, lowercase&#xA;text-decoration                 # 文本装饰&#xA;    none, underlinenone, overline, line-through, blink&#xA;text-shadow                     # 文本阴影, &amp;lt;h-shadow&amp;gt; &amp;lt;v-shadow&amp;gt; &amp;lt;blur&amp;gt; &amp;lt;color&amp;gt;, 水平偏移, 垂直偏移, 模糊程度, 颜色&#xA;direction                       # 文本对齐&#xA;    ltr, rtl&#xA;word-spacing                    # 词间距&#xA;letter-spacing # 字母间距&#xA;white-space&#xA;    normal 空白被压缩，文本行自动换行&#xA;    nowrap 空白压缩，文本行不换行&#xA;    pre 空白不压缩, 换行符换行&#xA;    pre-line 空白压缩，自动换行或换行符换行&#xA;    pre-wrap 空白不压缩, 自动换行或换行符换行&#xA;line-height                     # 行高, 百分比，长度&#xA;word-wrap                       # 行超距单词截断&#xA;    normal 溢出&#xA;    break-word&#xA;@font-face                      # 指定web字体, woff得到最广泛支持, 在@font-face中定义，font-family中使用&#xA;    @font-face {&#xA;        font-family: &#39;MyFont&#39;;&#xA;        font-style: normal;&#xA;        font-weight: normal;&#xA;        src: url(&#39;http://a/MyFont.woff&#39;)&#xA;    }&#xA;font                            # &amp;lt;font-style&amp;gt; &amp;lt;font-variant&amp;gt; &amp;lt;font-weight&amp;gt; &amp;lt;font-size&amp;gt; &amp;lt;font-family&amp;gt;&#xA;    简写属性&#xA;        font-family             # serif, sans-serif, monospace, cursive, fantasy&#xA;            font-family: MyFont, cursive&#xA;        font-style              # normal, italic, oblique&#xA;font-variant                    # normal, small-caps&#xA;    font-weight                 # bold, bolder, lighter&#xA;    font-size&#xA;        xx-small 浏览器决定的大小&#xA;        x-small, small, medium, large, x-large, xx-large&#xA;        smaller 相对父元素字体的大小&#xA;        larger, &amp;lt;length&amp;gt;, &amp;lt;%&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;列表样式&#34;&gt;&#xA;  列表样式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%97%e8%a1%a8%e6%a0%b7%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;list-style                      # &amp;lt;list-style-type&amp;gt; &amp;lt;list-style-position&amp;gt; &amp;lt;list-style-image&amp;gt;&#xA;    list-style-type             # 列表项前标记&#xA;        none, box, check, circle, diamond, disc, dash, square, decimal, binary, lower-alpha, upper-alpha&#xA;    list-style-image            # 图片作为列表标记&#xA;    list-style-position         # 相对于内容框的位置&#xA;        inside 内容框内部&#xA;        outside 外部&#xA;vertical-align                  # 垂直对齐（文字不行）&#xA;&#xA;cursor&#xA;    auto ：标准光标&#xA;    default ：标准箭头&#xA;    hand ：手形光标&#xA;    wait ：等待光标&#xA;    text ：I形光标&#xA;    vertical-text ：水平I形光标&#xA;    no-drop ：不可拖动光标&#xA;    not-allowed ：无效光标&#xA;    help ：?帮助光标&#xA;    all-scroll ：三角方向标&#xA;    move ：移动标&#xA;    crosshair ：十字标 &#xA;    pointer&#xA;    e-resize n-resize nw-resize w-resize s-resize se-resize sw-resize ne-resize&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;表格样式&#34;&gt;&#xA;  表格样式&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a1%a8%e6%a0%bc%e6%a0%b7%e5%bc%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;border-collapse                 # 相邻单元格边框样式&#xA;    separate 默认，重复画框&#xA;    collapse 合并边框&#xA;border-spacing                  # 相邻单元格边框距离&#xA;table-layout                    # 单元格行列的算法规则&#xA;    auto&#xA;    fixed 由表格自身样式和每列width属性决定布局[无则设等间距]，由第一行决定列宽，以下行内容自动换行&#xA;caption-side                    # 表格标题的位置&#xA;    top, bottom&#xA;empty-cells                     # 是否显示表格中空单元格&#xA;    hide&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;计数器&#34;&gt;&#xA;  计数器&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%a1%e6%95%b0%e5%99%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;counter-reset                   # 用于有序列表&#xA;counter-increment&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;动画&#34;&gt;&#xA;  动画&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8a%a8%e7%94%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;介绍&#xA;    本质是增强过渡&#xA;@keyframes&#xA;    指定一个以上关键帧&#xA;    只在过程中有效，动画结束后即使仍hover, 也返回初始状态&#xA;animation&#xA;    动画，动画完后回到初始状态。想停留在结束状态用过渡。&#xA;    可以用在初始布局中&#xA;    通过keyframe显式控制， 可重用&#xA;    &amp;lt;animation-name&amp;gt; &amp;lt;animation-duration&amp;gt; &amp;lt;animation-timing-function&amp;gt; &amp;lt;animation-delay&amp;gt; &amp;lt;animation-iteration-count&amp;gt;&#xA;        只是模拟属性值改变来实现动画，动画结束后属性无变化&#xA;        可以应用到页面的初始布局中去，而transform只能应用在动作上&#xA;&#xA;    animation-delay             # 延迟，可以指定多个值，对应transition-property中的多个属性&#xA;    animation-direction         # 重复播放时播放方向&#xA;        normal 每次向前播放&#xA;        alternate 先向前，再反向，相当于animation-iteration-count: 2&#xA;    animation-duration          # 持续时间, 可多值&#xA;    animation-iteration-count   # 循环次数&#xA;        infinite                # 无休止交替播放&#xA;    animation-name              # 关键帧集合名称，可多个&#xA;    animation-play-state        # 动画状态, js中ele.style.webkitAnimationPlayState = &#39;paused&#39;&#xA;        paused                  # 停止&#xA;        playing                 # 开始播放&#xA;    animation-timing-function   # 关键帧时间插值函数&#xA;        normal                  # 每次重复向前播放&#xA;        alternate               # 先向前播放，再反向播放，相当于animation-iteration-count: 2&#xA;transform                       # 变换，动画结束后属性有变化&#xA;    -moz-transform: rotate(-45deg) scaleX(1.2)              # 逆时针旋转45度, 延x轴缩放到1.2倍&#xA;    函数&#xA;        translate               # 水平、垂直或两个方向 平衡。长度，百分比&#xA;        translateX&#xA;        translateY&#xA;        scale                   # 数&#xA;        scaleX&#xA;        scaleY&#xA;        rotate                  # 角度&#xA;        skew                    # 倾斜, 角度&#xA;        skewX&#xA;        skewY&#xA;        matrix                  # 6个参数。自定义变换, 由于z缩放未被实现，后两个参数省略&#xA;    transform-origin            # 变换的起点，默认是元素中心点&#xA;        transform-origin right top;&#xA;        长度，百分比，left center right, top center, bottom&#xA;&#xA;transition                      # &amp;lt;transition-property&amp;gt; &amp;lt;transition-duration&amp;gt; &amp;lt;transition-timing-function&amp;gt; &amp;lt;transition-delay&amp;gt;, 可以作为初始状态，也可以过渡&#xA;    transition-delay            # 开始之间延迟时间, ms&#xA;    transition-duration         # 持续时间, ms&#xA;    transition-property         # 应用过渡的多个属性&#xA;    transition-timing-function              # 时间函数&#xA;        ease 默认&#xA;        linear&#xA;        ease-in&#xA;        ease-out&#xA;        ease-in-out&#xA;        cubic-bezier 指定自定义曲线&#xA;&#xA;    o-&amp;gt;&#xA;    -webkit-&#xA;    transition: .2s background-cololr&#xA;    transition: .2s all&#xA;示例&#xA;    o-&amp;gt; 过渡&#xA;    #banana {&#xA;        font-size: large;&#xA;        border: medium solid black;&#xA;        -webkit-transition-delay: 10ms;&#xA;        -webkit-transition-duration: 250ms;&#xA;            # 反向过渡&#xA;    }&#xA;    #banana:hover {&#xA;        font-size: x-large;&#xA;        border: medium solid white&#xA;        background-color: green;&#xA;        color: white;&#xA;        padding: 4px;&#xA;        -webkit-transition-delay: 100ms;&#xA;        -webkit-transition-property: background-color, color, &#xA;            padding, font-size, border;&#xA;        -webkit-transition-duration: 500ms;&#xA;        -webkit-transition-timing-function: linear;&#xA;    }&#xA;&#xA;    o-&amp;gt; 动画&#xA;    #banana:hover {&#xA;        -webkit-animation-delay: 100ms;&#xA;        -webkit-animation-duration: 500ms;&#xA;        -webkit-animation-iteration-count: infinite;&#xA;        -webkit-animation-timing-function: linear;&#xA;        -webkit-animation-name: &#39;GrowShrink&#39;;&#xA;        -webkit-animation-direction: alternate;&#xA;    }&#xA;    @-webkit-keyframes GrowShrink {&#xA;        from {&#xA;            # 可以用0%替代&#xA;            font-size: xx-small;&#xA;            background-color: red;&#xA;        }&#xA;        50% {&#xA;            # 定义了变化的速率，可以用0%, 100%代替from和to子句&#xA;            background-color: yellow;&#xA;            padding: 1px;&#xA;        }&#xA;        to {&#xA;            # 可以用100%替代&#xA;            font-size: x-large;&#xA;            border: medium solid white;&#xA;            background-color: green;&#xA;            color: white;&#xA;            padding: 4px;&#xA;        }&#xA;    }&#xA;&#xA;    o-&amp;gt; 变换&#xA;    #banana {&#xA;        -moz-transform: rotate(-45deg) scale(1.2);&#xA;        -moz-transform-origin: right top;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;典型问题&#34;&gt;&#xA;  典型问题&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%85%b8%e5%9e%8b%e9%97%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;垂直居中&#xA;    line-height&#xA;        .content {&#xA;            height: 100px;&#xA;            line-height: 100px;&#xA;        }&#xA;    vertical-align&#xA;        .wrapper {display: table;}&#xA;        .cell {&#xA;            display: table-cell;&#xA;            vertical-align: middle;&#xA;        }&#xA;    position&#xA;        .wrapper {position: relative}&#xA;        .content {&#xA;            left: 50%;&#xA;            top: 50%;&#xA;            transform: translate(-50%, -50%)&#xA;        }&#xA;    position&#xA;        .content {&#xA;            position: absolute;&#xA;            top: 0;&#xA;            bottom: 0;&#xA;            left: 0;&#xA;            right: 0;&#xA;            margin: auto;&#xA;        }&#xA;    float填充一半&#xA;        .floater {&#xA;            float: left;&#xA;            height: 50%;&#xA;            margin-bottom: -120px;&#xA;        }&#xA;        .content {&#xA;            clear: both;&#xA;            height: 240px;&#xA;            position: relative;&#xA;        }&#xA;图标切分&#xA;    background-image: url(/base/icons.png);&#xA;    background-repeat: no-repeat;&#xA;    background-position: -910px -74px;&#xA;内部元素自动高度&#xA;    .parent {&#xA;        overflow: hidden;&#xA;    }&#xA;    .parent .children {&#xA;        overflow: hidden;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;工具&#34;&gt;&#xA;  工具&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b7%a5%e5%85%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;stylus&#xA;    # css扩展语言, 创建富有表现力的css, 比less更强大, 类似jquery的css引擎, 支持node.js&#xA;compass&#xA;    # 编译到css，是sass的toolkit, 是用ruby开发的&#xA;blueprint&#xA;    # css框架&#xA;sass&#xA;    # css扩展语言&#xA;caniuse.com&#xA;    # 在线浏览器兼容性测试&#xA;modernizr.com&#xA;    # 测试特性支持是否到位&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;less&#34;&gt;&#xA;  less&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#less&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;介绍&#xA;    less于css如jquery于js&#xA;安装使用&#xA;    npm install -g less&#xA;命令&#xA;    lessc styles.less &amp;gt; styles.css                # 编译&#xA;                                # -x 压缩  --clean-css 更复杂的压缩&#xA;语法&#xA;模板&#xA;    {% %}&#xA;变量&#xA;    @color: #4D926F;&#xA;    #header{&#xA;        color: @color&#xA;    }&#xA;    h2{&#xA;        color: @color&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
