<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>架构 on outrun的笔记</title>
    <link>https://runout.run/categories/%E6%9E%B6%E6%9E%84/</link>
    <description>Recent content in 架构 on outrun的笔记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 01 Dec 2022 17:31:04 +0800</lastBuildDate>
    <atom:link href="https://runout.run/categories/%E6%9E%B6%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>工程设计</title>
      <link>https://runout.run/docs/architect/project/</link>
      <pubDate>Wed, 10 Oct 2018 17:39:31 +0800</pubDate>
      <guid>https://runout.run/docs/architect/project/</guid>
      <description>&lt;h1 id=&#34;产品&#34;&gt;&#xA;  产品&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%a7%e5%93%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;愿景&#xA;    定义产品的目的和原因，将到达的地点&#xA;ux&#xA;    微交互                  # 细节决定成败&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;roadmap&#34;&gt;&#xA;  RoadMap&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#roadmap&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;介绍&#xA;    到达愿景的策略路径，提供一系列与产品战略相一致的战术步骤&#xA;为什么&#xA;    简单、清晰的通讯文档&#xA;        少的多的会议&#xA;        健康的团队辩论：交付成果与目标联系起来&#xA;        做出每个人都理解的产品决定，不再打击创意&#xA;    高维度的概述&#xA;    动态演变&#xA;要素&#xA;    时间周期&#xA;        时间区间，只定时间范围&#xA;            big-view(product)&#xA;                全局理解产品的未来,  交付顺序&#xA;                统一视野(vision), 范围(scope)，时间期限(time line)&#xA;            pre-view(release)&#xA;                release中的产品功能, 和前几个迭代从backlog中要交付的工作项(item)&#xA;            now-view(iteration)&#xA;                团队在一次迭代中要交付的需求(requirements)&#xA;        优先级，留空间适应变化&#xA;    项目事件&#xA;        完成产品总体计划必要的工作项, 详尽且切合目的&#xA;        分解目的，制定步骤&#xA;    路标&#xA;        关键工作项完成的时间节点(里程碑)&#xA;        结果反馈：审视是否偏离，试验中改进&#xA;        确定在每个时间范围内实现可衡量的结果。定义为目标关键结果(OKR)、关键性能指标(KPI)&#xA;种类&#xA;    基于目标&#xA;        current&#xA;        near term&#xA;        future&#xA;    基于功能&#xA;        5000新用户&#xA;步骤&#xA;    确定目标&#xA;    分解目标，穷尽事项，组织，优先级排序&#xA;    使用优化框架&#xA;        effort / impact&#xA;        impact / goal&#xA;        卡洛斯模型?&#xA;注意&#xA;    定义战略主题(名词)，抓住核心用户行为的本质、产品能力、竞争优势、技术改进&#xA;    保持路线图战略，避免战术&#xA;    每个计划阶段都考虑优先级, 每个目标、动作、发布、特性的价值可见性&#xA;    始终在试验(ABE), 为了正确定义目标和后续特征&#xA;        先做出有根据的猜测&#xA;        测试&#xA;        基于反馈迭代&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;业务&#34;&gt;&#xA;  业务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%9a%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;目标&#xA;    降低人才素质需求&#xA;    减少开发时间&#xA;分类&#xA;    创造虚拟空间&#xA;    自动化&#xA;    辅助决策&#xA;思路&#xA;    逻辑: 因果(演绎), 时间, 空间, 优先&#xA;    方法: 5w2h(who, when, where, why, what, how, how much)&#xA;    建模:&#xA;        中心                                # 调整抽象领域和层次(视问题决定)&#xA;            自上而下                        # 问题明确，展开&#xA;            自下而上                        # 内容分类、剪枝、归纳&#xA;        分解&#xA;            MECE(mutually exclusive collectively exhaustive)&#xA;                正交&#xA;                穷尽&#xA;    经验&#xA;        优秀的产品都有全局把控感(confluence, jira)&#xA;        设计思想多源自: 操作系统、编译器、函数式&#xA;        深入一线(面对客户)&#xA;        思考全面, 全局&#xA;        考虑需求本质，考虑上下游全局&#xA;        想清楚再行动&#xA;过程&#xA;    发掘(discovery)&#xA;        价值定位(价值驱动)&#xA;        客户体验梳理和设计&#xA;        愿景&#xA;        干系人&#xA;        电梯演讲收敛&#xA;    定义(define)&#xA;        用户旅程，业务流程&#xA;        事件风暴 -&amp;gt; 映射技术 -&amp;gt; 架构&#xA;    设计(design)&#xA;        总体&#xA;            识别问题域, 归纳服务, 上下游关系&#xA;            架构图, api, 技术栈&#xA;            提升方向, 改进&#xA;        迭代&#xA;            价值/成本分布图&#xA;            milestone演进&#xA;            业务技术/需求拆解全景图(白板贴标)&#xA;            mvp(minimum viable product最小可行计划)迭代计划&#xA;    开发(develop)&#xA;        度量, 质量指标&#xA;        工具选择, 规范&#xA;        架构守护，治理&#xA;    实施策略&#xA;    交付&#xA;    产品生命周期管理&#xA;        目标, 资本&#xA;        机会点-&amp;gt;需求&#xA;角度决定设计&#xA;    找到不动点&#xA;    如对cache的设计&#xA;        业务角度&#xA;            选择简单易用的缓存框架&#xA;            有人会用，学习成本别太高&#xA;            关注数据模型结构设计&#xA;            缓存更新真麻烦&#xA;        paas角度&#xA;            声明式使用，配置文件设置&#xA;            缓存对比，选择强大且稳定的&#xA;            存取接口设计，方便易用&#xA;            数据变动监听，自动刷新缓存&#xA;        平台角度&#xA;            缓存服务器集群方式&#xA;            存储空间监控&#xA;            命中率监控&#xA;            避免缓存集中失效引起雪崩&#xA;不过度设计      # 不超出需求，不用复杂方式实现&#xA;                # 少就是多，应一减再减。简单才能强大，也会提高性能和扩展性&#xA;    范围减少    # 28原则，最小可行产品&#xA;    设计减少    # 易理解，低成本，可扩展&#xA;    实施减少    # 找开源-&amp;gt;找内部已实现-&amp;gt;找方案描述-&amp;gt;自己解决&#xA;    二八定律&#xA;墨菲定律&#xA;    事情不是表面看起来那么简单&#xA;    事情都会比预计时间长&#xA;    可能出错总会出错&#xA;    如果你担心发生，它更可能发生&#xA;维护&#xA;    设计时考虑扩展性&#xA;        DID(design, implement, deploy)(设计20倍, 实现3-20倍, 部署1.5-3倍)&#xA;    设计能够监控的应用&#xA;    版本升降      # 代码仓库&#xA;业务&#xA;    防重          # 重复提交，重复扣减，重复支付(异构系统无法防重，用退款处理)&#xA;        防重key, 防重表&#xA;    幂等          # 消息处理，第三方支付回调&#xA;    流程要抽象     # 如工作流&#xA;    状态与状态机&#xA;        订单系统&#xA;            # 状态多时用状态机驱动&#xA;            正向状态(待付款、待发货、已发货、完成)&#xA;            逆向状态(取消、退款)&#xA;            状态轨迹    # 跟踪和记日志，可回溯&#xA;            并发修改，状态变更有序，状态变更消息有序&#xA;前端&#xA;    减少dns查找     # dns可能查多个域&#xA;    减少对象        # 页面布局少，图片合并。对象不要过大，减少到浏览器并发连接数&#xA;    后台系统操作可反馈   # 便于确认效果&#xA;文档和注释&#xA;    设计架构&#xA;    设计思想&#xA;    数据字典/业务流程&#xA;    现有问题&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;设计&#34;&gt;&#xA;  设计&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%be%e8%ae%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;分层做维度扩展&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;ddd&#34;&gt;&#xA;  DDD&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ddd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;dodaf20&#34;&gt;&#xA;  DODAF2.0&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#dodaf20&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;介绍&#xA;    美国国防部（DOD）&#xA;    项目立项和顶层架构间，建立跟踪机制&#xA;八种视图&#xA;    全视图&#xA;    数据与信息视图&#xA;    标准视图&#xA;    能力视图&#xA;    作战视图&#xA;    服务视图&#xA;    系统视图&#xA;    项目视图&#xA;业务组件化&#xA;    基本的、唯一的、不重复的，可单独运行&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;项目&#34;&gt;&#xA;  项目&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a1%b9%e7%9b%ae&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;分层&#34;&gt;&#xA;  分层&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%88%86%e5%b1%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;mv*&#xA;    mvc&#xA;        # view controller model, 单向循环&#xA;    mvp&#xA;        # view presenter model, presenter双向交互&#xA;    mvvm&#xA;        # view view-model model, view-model双向绑定&#xA;&#xA;验证&#xA;异常层&#xA;    # 封装每层异常为不同异常类&#xA;过滤层&#xA;监听器&#xA;日志&#xA;测试&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>AI</title>
      <link>https://runout.run/docs/architect/strategy/ai/</link>
      <pubDate>Wed, 10 Oct 2018 16:49:27 +0800</pubDate>
      <guid>https://runout.run/docs/architect/strategy/ai/</guid>
      <description>&lt;h1 id=&#34;基础&#34;&gt;&#xA;  基础&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9f%ba%e7%a1%80&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;模型的作用&#xA;    调模型参数自动做特征工程 &#xA;交互&#xA;    用户数据 -&amp;gt; 向量化 -&amp;gt; 向量 -&amp;gt; 模型 -&amp;gt; 输出&#xA;算法分类&#xA;    离线: 复杂模型&#xA;    在线: 时间短&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;框架&#34;&gt;&#xA;  框架&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a1%86%e6%9e%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;tensorflow&#xA;    # 神经网络计算&#xA;convnet.js&#xA;    # js深度学习&#xA;scikit-learn&#xA;    # python机器学习&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;特征工程&#34;&gt;&#xA;  特征工程&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%89%b9%e5%be%81%e5%b7%a5%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;向量化, 量化才能优化, bitmap存储(位数即维数)&#xA;one-hot: 太长，无序，歧义&#xA;业务导向存储&#xA;    分段标识，如年龄区间[0,1,0,0]&#xA;    需要经验及产品设计&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;模型&#34;&gt;&#xA;  模型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a8%a1%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;分类&#xA;    传统模型&#xA;        速度快&#xA;    深度模型&#xA;        业务复杂, 数据量大时用&#xA;模型&#xA;    线性回归&#xA;    逻辑回归&#xA;    朴素贝叶斯&#xA;    支撑向量机&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;用户画像&#34;&gt;&#xA;  用户画像&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%94%a8%e6%88%b7%e7%94%bb%e5%83%8f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;在Hive中存&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;场景&#34;&gt;&#xA;  场景&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9c%ba%e6%99%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;聊天机器人&#xA;    类型&#xA;        QA机器人&#xA;        闲聊机器人&#xA;        任务机器人: AIOps&#xA;        场景机器人&#xA;    实现类型&#xA;        基于检索&#xA;        基于生成模型&#xA;语音识别&#xA;知识图谱&#xA;生物特征识别&#xA;AIoT&#xA;AITest&#xA;视频行为分析&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>IoT</title>
      <link>https://runout.run/docs/architect/strategy/iot/</link>
      <pubDate>Wed, 10 Oct 2018 16:49:27 +0800</pubDate>
      <guid>https://runout.run/docs/architect/strategy/iot/</guid>
      <description>&lt;h1 id=&#34;场景&#34;&gt;&#xA;  场景&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%9c%ba%e6%99%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;展示&#34;&gt;&#xA;  展示&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b1%95%e7%a4%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;dashboard&#xA;    在线设备&#xA;    消息量&#xA;    规则引擎消息流转次数&#xA;运维大盘&#xA;    产品品类&#xA;    地区排名&#xA;    指标趋势&#xA;    设备在线率&#xA;    设备排行&#xA;        事件数&#xA;        事件类型&#xA;        停用时长&#xA;        延迟&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;设备管理&#34;&gt;&#xA;  设备管理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%be%e5%a4%87%e7%ae%a1%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;接入&#xA;    多协议: MQTT、CoAP、HTTP&#xA;    多平台(设备端代码): c、node.js、java&#xA;    多网络: 2/3/4G、NB-IoT、LoRa&#xA;    多地域&#xA;通信&#xA;    双向通信&#xA;        稳定&#xA;        安全&#xA;    影子缓存                            # 设备与应用解耦, 网络不稳定时增加可靠性&#xA;安全&#xA;    认证(一机一密)&#xA;    传输: TLS&#xA;    权限: 设备权限&#xA;规则引擎&#xA;    数据流转&#xA;        M2M(machine to machine)            # 设备间通信&#xA;        数据结构化存储&#xA;        数据计算: 函数计算、流式计算、大规模计算&#xA;        数据mq转发&#xA;    联动触发&#xA;管理&#xA;    生命周期: 注册、分组、拓扑、标签、状态、数据采集、禁用删除&#xA;    模型&#xA;        数据标准化: 属性、事件、服务&#xA;        存储结构化&#xA;    远程&#xA;        设备调试&#xA;            实物&#xA;            模拟&#xA;        维护&#xA;            指令&#xA;            固件升级&#xA;            下发配置&#xA;        监控&#xA;            日志&#xA;            实时数据&#xA;        通知&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;数据分析&#34;&gt;&#xA;  数据分析&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e6%8d%ae%e5%88%86%e6%9e%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;流计算实时分析&#xA;可视化&#xA;    三维设备关联&#xA;    二维(地图)分布, 实况， 搜索&#xA;数据源适配&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;产业&#34;&gt;&#xA;  产业&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%ba%a7%e4%b8%9a&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;车联网、智能家居、穿戴、媒体内容分发、环境监测、智慧农业&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;开发服务&#34;&gt;&#xA;  开发服务&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%bc%80%e5%8f%91%e6%9c%8d%e5%8a%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;Studio&#xA;    开发&#xA;        web&#xA;        移动&#xA;        自动化服务&#xA;    设备&#xA;        产品                        # 软硬分离的桥梁&#xA;            设备开发 -&amp;gt; 设备模拟(在线写c, js) -&amp;gt; 软件开发&#xA;    配置(使用移动端)&#xA;    运营运维&#xA;        后台&#xA;        监控&#xA;    插件开发&#xA;    服务编排&#xA;Studio OS&#xA;    # 高性能、极简开发、云端一体、丰富组件、安全防护&#xA;    项目生成&#xA;        领域模板&#xA;        插件选择&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;技术&#34;&gt;&#xA;  技术&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8a%80%e6%9c%af&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;AIoT&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;边缘计算&#34;&gt;&#xA;  边缘计算&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%be%b9%e7%bc%98%e8%ae%a1%e7%ae%97&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;优势&#xA;    就近计算&#xA;    实时&#xA;    离线运行&#xA;    快速编程&#xA;    降低成本&#xA;功能&#xA;    视频设备sdk&#xA;        边缘算法容器(接入方案)&#xA;    视频智能&#xA;        视频算法容器&#xA;驱动&#xA;    websocket、modbus、lightSensor、light、opcua&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;网络&#34;&gt;&#xA;  网络&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bd%91%e7%bb%9c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;协议&#xA;    NB-IoT&#xA;        Narrow Band Internet of Things&#xA;        物理层/数据链路层, 蜂窝网络上，消耗和带宽低&#xA;        场景&#xA;            Standalone&#xA;            Guard-band&#xA;            In-band&#xA;    LoRa&#xA;        Long Range&#xA;    LoRaWAN&#xA;        物理层/数据链路层&#xA;    CoAP&#xA;        Constrained Application Protocol&#xA;        资源紧张的设备&#xA;    MQTT&#xA;        Message Queue Telemetry Transport&#xA;        低电量低带宽, 提供数据传输QoS, 可传任意类型数据, 有Session&#xA;    MQTT-SN&#xA;        MQTT for Sensor Network&#xA;        MQTT协议的传感器版本&#xA;    LwM2M&#xA;        Lightweight Machine-To-Machine&#xA;        轻量级RESTful&#xA;    ZigBee&#xA;    SigFox&#xA;    eMTC&#xA;        被NT-IoT取代&#xA;    DDS&#xA;    AMQP&#xA;    XMPP&#xA;    JMS&#xA;网关&#xA;凭证&#xA;无线&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;设备&#34;&gt;&#xA;  设备&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%ae%be%e5%a4%87&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;统一网关&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;框架&#34;&gt;&#xA;  框架&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a1%86%e6%9e%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;# Internet of Things&#xA;Kaa&#xA;SiteWhere&#xA;    # tomcat, mongodb, hbase, influxdb, grafana&#xA;ThingSpeak&#xA;    # matlab可视化&#xA;DeviceHive&#xA;    # 开源, docker, k8s, es, spark, cassandra, kafka&#xA;Zetta&#xA;Thinger.io&#xA;wso2&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>中台</title>
      <link>https://runout.run/docs/architect/strategy/middle_platform/</link>
      <pubDate>Wed, 10 Oct 2018 16:49:27 +0800</pubDate>
      <guid>https://runout.run/docs/architect/strategy/middle_platform/</guid>
      <description>&lt;h1 id=&#34;业务中台&#34;&gt;&#xA;  业务中台&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%9a%e5%8a%a1%e4%b8%ad%e5%8f%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;权限&#34;&gt;&#xA;  权限&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%9d%83%e9%99%90&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;类型&#xA;    ACL(access control list)                        # 访问权限列表&#xA;    RBAC(role base access control)                  # 基于角色的访问控制&#xA;    ABAC(attribute base access control)             # 基于属性(计算属性)的访问控制&#xA;    DAC(discretionary access control)               # 自主访问控制&#xA;        主体对所属对象有全部控制权&#xA;        主体执行的程序权限相同&#xA;        主体权限可分配给其它用户&#xA;    MAC(mandatory access control)                   # 强制访问控制&#xA;        管理分配权限，主体不能改变&#xA;        主体只能访问他的对象，也不能写低级别对象&#xA;成员&#xA;    user&#xA;    role&#xA;    group&#xA;访问权限&#xA;    权限1: 游客，用户，rememberMe&#xA;    权限2: uri前缀(功能模块)&#xA;    权限3: uri后缀(静态资源过滤)&#xA;    判断位置: 过滤器中&#xA;资源权限&#xA;    权限: kind:part1:part2...&#xA;    判断位置: 渲染数据前&#xA;数据权限&#xA;    资源层级&#xA;        权限: 2&#xA;        判断位置: 进方法前&#xA;    单表&#xA;        权限: 表名:列名:值&#xA;        判断位置: 写sql前&#xA;方法权限&#xA;    权限: 方法域:方法名&#xA;    判断位置: 进方法前&#xA;性能&#xA;    grantTable缓存u_id, res_id关系&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;审批&#34;&gt;&#xA;  审批&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ae%a1%e6%89%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;模板&#xA;    准入规则&#xA;    起始、终止节点&#xA;    节点, 节点成员, 替换成员, 节点事件(脚本), 跳转公式&#xA;审批流程&#xA;    创建, 状态查询&#xA;    审批&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;海&#34;&gt;&#xA;  海&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b5%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;type                    # 记录类型&#xA;    property            # 类型动作, 关联到节点, 记录进出节点的动作。如对成员可读、可写, 记录负责人，对记录执行脚本, 记录回收计划&#xA;model                   # 模式&#xA;    节点树、一个激活&#xA;节点&#xA;    节点组&#xA;    两节点方向&#xA;成员&#xA;    节点成员1对多&#xA;    成员分组(group, role)也是成员&#xA;记录&#xA;    节点记录1对1&#xA;流转                     # 记录按规则在节点流转, 指定某些节点, 或某些记录。动作流程短路&#xA;    motion               # 一次动作，如新建，移动，删除。&#xA;    规则                 # 该次动作对记录的验证&#xA;    fomula               # 计算motion次序&#xA;    历史                  # 动作历史&#xA;权限&#xA;    kind                 # pass或 type、model、property、节点、节点from, 节点to 的任意组合&#xA;    access              # 分不同kind划分具体权限, 如(节点from, 节点to)kind的转移权限&#xA;    pass权限             # 如创建type, 创建model, 某节点所有权限等&#xA;计划                     # 定时或周期的流转&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;适配器boss&#34;&gt;&#xA;  适配器boss&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%80%82%e9%85%8d%e5%99%a8boss&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;action                  # 存http地址，参数名，验证器&#xA;    code                # 业务，如用户套餐&#xA;    mode: get/post/put/delete               # 如获得套餐，添加套餐，修改套餐，删除套餐&#xA;    ctx                 # 参数map, action调用前后修改&#xA;    next                # 下个触发action&#xA;history_action          # action调用历史&#xA;suite                   # 带参action, thunk待触发&#xA;    price               # 标价&#xA;    tag                 # 用作商品分类&#xA;order                   # 用户关联到suite, 计费&#xA;category                # 生成action模板&#xA;    apps/plugins        # 由category生成, 多个带形参(如app_id)action, 封装成的模板。添加实例填入实参&#xA;role&#xA;permission              # action code&#xA;    type                # action, suite等&#xA;    access              # crud和其它自定义权限&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;工作流&#34;&gt;&#xA;  工作流&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b7%a5%e4%bd%9c%e6%b5%81&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;本质&#xA;    状态管理&#xA;    工作流重流程轻数据，业务重数据轻流程。工作流修改数据，数据触发工作流&#xA;标准&#xA;    BPMN                            # omg制定&#xA;    workflow&#xA;    XPDL                            # WfMC制定, xml, 复杂&#xA;思路&#xA;    # 模型驱动架构(MDA)&#xA;    petri nets&#xA;    有限状态机(FSM)                  # 并行(流水线)状态机&#xA;    活动图                          # JBoss使用&#xA;    事件过程驱动链(EPC)&#xA;    微内核                          # 安全性高, 降耦合&#xA;已有实现&#xA;    开源&#xA;        yawl, jbpm, activiti, osworkflow, jboss, shark, obe&#xA;    商业&#xA;        aws, salesforce, sap等&#xA;分层&#xA;    外设层                          # 交互协议&#xA;    网关(WAPI)&#xA;    交互代理                         # 网关与内核通信形式&#xA;    引擎                            # engine&#xA;        specification, case&#xA;        net&#xA;            netRunner&#xA;                continueIfPossible  # 遍历task, fire task,&#xA;        condition&#xA;        task&#xA;            join, split             # and所有, xor只一个, or规则&#xA;            workitem&#xA;        flow&#xA;        persisting&#xA;        gateway&#xA;    引擎运行服务                      # 为引擎提供服务, 如解析流程定义、流程实例存储、参与者(workItem)解析、脚本计算、事件监听等&#xA;    扩展实现&#xA;        支撑&#xA;            组织模型适配&#xA;                人工task实现人工接口&#xA;            流程实例存储&#xA;                执行器中嵌入&#xA;            其它应用适配              # 如邮件&#xA;                内核获取环境资源&#xA;                执行器定义扩展&#xA;                应用适配扩展接口&#xA;            操作流程定义&#xA;            任务分配&#xA;        辅助&#xA;            条件验证                 # 可以有外部验证器&#xA;                分支时判断&#xA;            事件处理/function处理&#xA;            抽象的客户操作            # 如退回、跳转等&#xA;        增强&#xA;            自定义策略(workItem), 如代理人处理、工作日历(任务期限)&#xA;                工作项分配、执行、提交&#xA;            事件监听&#xA;            超时处理&#xA;                订阅应用事件, 应用时间触发器&#xA;    基础组件&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;数据中台&#34;&gt;&#xA;  数据中台&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%95%b0%e6%8d%ae%e4%b8%ad%e5%8f%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>战略性技术</title>
      <link>https://runout.run/docs/architect/strategy/</link>
      <pubDate>Wed, 10 Oct 2018 16:49:27 +0800</pubDate>
      <guid>https://runout.run/docs/architect/strategy/</guid>
      <description></description>
    </item>
    <item>
      <title>架构</title>
      <link>https://runout.run/docs/architect/</link>
      <pubDate>Wed, 10 Oct 2018 16:49:27 +0800</pubDate>
      <guid>https://runout.run/docs/architect/</guid>
      <description>&lt;h1 id=&#34;要求&#34;&gt;&#xA;  要求&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a6%81%e6%b1%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;&amp;quot;我这辈子收到的最好的职业建议是在日本实习时， 一位长者跟我说的：年轻人最重要的是建立好的自己名声。这里的名声不是指沽名钓誉。而是每一篇论文，每一次演讲，每份交接给同事的工作，凡是给别人看的东西，都要在能力范围内做到至善至美。慢慢养成习惯，就会越做越好。凡事糊弄人的人，是走不远的。&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;要求归纳&#34;&gt;&#xA;  要求归纳&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a6%81%e6%b1%82%e5%bd%92%e7%ba%b3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;个人&#xA;    责任心，抗压力&#xA;技术与产品&#xA;    专业知识，设计指导关键模块&#xA;    项目规划，架构前瞻性，风险管理，文档&#xA;人员管理&#xA;    部门结构，人员职责&#xA;    培养与考核&#xA;内部工具&#xA;    开发运维&#xA;    测试&#xA;销售目标&#xA;    营销团队组建及管理&#xA;    销售方案，品牌方案&#xA;    市场调研&#xA;    目标，考核，监督&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;招聘人员要求&#34;&gt;&#xA;  招聘人员要求&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%8b%9b%e8%81%98%e4%ba%ba%e5%91%98%e8%a6%81%e6%b1%82&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;不是我负责的，态度也要积极&#xA;项目经历是否有帮助&#xA;人员稳定性&#xA;代码不挖坑&#xA;沟通总结能力(micheal)&#xA;工时制度管理&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>知识图谱</title>
      <link>https://runout.run/docs/architect/strategy/ai/map/</link>
      <pubDate>Wed, 10 Oct 2018 16:49:27 +0800</pubDate>
      <guid>https://runout.run/docs/architect/strategy/ai/map/</guid>
      <description>&lt;h1 id=&#34;与深度学习区别&#34;&gt;&#xA;  与深度学习区别&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e4%b8%8e%e6%b7%b1%e5%ba%a6%e5%ad%a6%e4%b9%a0%e5%8c%ba%e5%88%ab&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;深度学习是显性模型，知识图谱是隐性模型&#xA;场景：人脸识别；语音助手&#xA;目前进展: 在一些任务上已超过人类；知识量超过人类，推理不如人类&#xA;任务范围：面向具体任务，难以迁移；广泛适用于不同任务&#xA;可解释性：较难解释；可解释性强&#xA;数据量：海量训练数据；海量知识数据&#xA;未来趋势：深度融合&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;历史&#34;&gt;&#xA;  历史&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8e%86%e5%8f%b2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;2010年: 微软构建Satori、Probase&#xA;2012年: 谷歌X实验室识别&amp;quot;猫&amp;quot;, 发布Google Knowledge Graph&#xA;2013年：百度布局&#xA;2015年：阿里布局&#xA;2016年：亚马逊布局&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;特点&#34;&gt;&#xA;  特点&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%89%b9%e7%82%b9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;视觉思维&#xA;关联&#xA;推理&#xA;结构识别&#xA;降维&#xA;概念图&#xA;网络模型&#xA;潜在领域寻迹&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;领域&#34;&gt;&#xA;  领域&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%a2%86%e5%9f%9f&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;宇宙图谱&#xA;    绘图学&#xA;    陆地地图&#xA;    天体图&#xA;    生物图谱&#xA;轨迹&#xA;    旅行商&#xA;    虚拟世界搜索&#xA;    信息觅食，过程建模&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;应用&#34;&gt;&#xA;  应用&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ba%94%e7%94%a8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;内容理解&#xA;    篇章理解&#xA;    推荐场景&#xA;        路径推荐&#xA;        知识融入推荐&#xA;        广告&#xA;    召回排序&#xA;    智能营销&#xA;        画像&#xA;            用户画像&#xA;            产品画像&#xA;            场景画像&#xA;        库&#xA;            概念库&#xA;            语义本体库&#xA;            规则库&#xA;        建模分析&#xA;            分词、词性标注、命名实体识别&#xA;            句法分析、语义表示、概念发现&#xA;            用户打标、场景打标、产品打标&#xA;            语义匹配、指代消解、主题模型&#xA;搜索理解&#xA;    语义搜索&#xA;    演化分析&#xA;    场景化搜索&#xA;    路径召回&#xA;    对话理解&#xA;商家&#xA;    智能化商家运营&#xA;    商业大脑&#xA;        商业分析&#xA;可解释性&#xA;    图谱路径推荐理由&#xA;    知识融入生成推荐理由&#xA;实体卡片&#xA;    资源聚合&#xA;    内容分发&#xA;    产业链图谱&#xA;    用户画像&#xA;    高管画像&#xA;    价格图谱&#xA;    债券风险预警&#xA;    中小企业风控图谱&#xA;    营销获客图谱&#xA;    产品与工艺创新研发&#xA;    安全质量&#xA;    供应链&#xA;    社会关系图谱&#xA;    交易关系图谱&#xA;    网络图谱&#xA;    时空关系图谱&#xA;任务自动化&#xA;    维度：可发现、可移接、可推理&#xA;    自动化：自动数据结构化、流程自动化、业务服务化、服务开放化&#xA;推理&#xA;    本体推理&#xA;        概念补全&#xA;        商品品类上下位发现&#xA;        同质类目/属性项/属性值识别，新类目发现&#xA;        实体识别与分类&#xA;    关系抽取&#xA;        实体对齐&#xA;        实体链接&#xA;        商品分类、增量商品分类、商品标题&#xA;    常识推理&#xA;        关系推理与链接预测&#xA;        规则学习&#xA;        百科知识发现&#xA;        商品对齐&#xA;        可比价同款规则挖掘&#xA;    知识问答&#xA;        知识增强学习&#xA;        知识融入语言预训练&#xA;        人货匹配&#xA;网络安全&#xA;    专家系统-&amp;gt;感知智能-&amp;gt;认识智能-&amp;gt;决策智能&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;流程&#34;&gt;&#xA;  流程&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%b5%81%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;数据爬取&#xA;    数据爬取平台&#xA;    知识获取&#xA;        实体识别&#xA;        概念、关系、属性抽取&#xA;        标签挖掘&#xA;        情感分析&#xA;        知识融合：概念层融合，数据层融合&#xA;        知识建模: 概念上下位关系生成、概念属性识别、规则建模、事件建模、时空建模&#xA;    多元异构数据&#xA;        非结构化文档&#xA;        半结构化数据&#xA;        结构化知识&#xA;    抽取模块&#xA;        基于规则&#xA;        基于模板   &#xA;        基于模型&#xA;            经典模型: PCNN、BiLSTM&#xA;            预训练模型: BERT、摩天&#xA;    预/后处理&#xA;        先验知识库: 规则库、领域词表、模板库、黑白名单&#xA;        数据集构建：人工标注、远程标注、数据集管理&#xA;知识融合&#xA;    Schema对齐(异构转同构)&#xA;    数据清洗&#xA;    实体对齐(去重，消岐)&#xA;    属性择优&#xA;知识关联&#xA;    规则推理&#xA;    建边模型&#xA;存储检索&#xA;    图引擎&#xA;        图存储引擎&#xA;        图学习引擎&#xA;        图查询引擎&#xA;    优化&#xA;        KV库&#xA;        索引库&#xA;        控制和数据分离&#xA;        Schema压缩&#xA;知识计算&#xA;    知识补全&#xA;    知识推理&#xA;    知识统计与图挖掘&#xA;知识图谱金字塔&#xA;    文本(text)-&amp;gt;标签(label、tag)-&amp;gt;表格(table)-&amp;gt;图(graph)-&amp;gt;模式(schema)-&amp;gt;本体(ontology)-&amp;gt;规则(rule)&#xA;技术&#xA;    计算：Spark&#xA;    中间存储：HIVE&#xA;    检索：ES&#xA;监控体系&#xA;    知识管理系统&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;框架&#34;&gt;&#xA;  框架&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%a1%86%e6%9e%b6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;Spark&#xA;HIVE&#xA;ES&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;工具&#34;&gt;&#xA;  工具&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%b7%a5%e5%85%b7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;CiteSpace&#xA;Jigsaw&#xA;Carrot&#xA;iOpener&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>前端</title>
      <link>https://runout.run/docs/architect/project/frontend/</link>
      <pubDate>Wed, 10 Oct 2018 14:51:24 +0800</pubDate>
      <guid>https://runout.run/docs/architect/project/frontend/</guid>
      <description>&lt;h1 id=&#34;组件化layout&#34;&gt;&#xA;  组件化Layout&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bb%84%e4%bb%b6%e5%8c%96layout&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;layout service&#xA;&#x9;# 缓存layout到redis&#xA;&#x9;crud layout功能&#xA;layout对象&#xA;&#x9;index&#xA;&#x9;&#x9;# 缩略信息&#xA;&#x9;plugins&#xA;&#x9;&#x9;components&#xA;&#x9;&#x9;&#x9;table&#xA;&#x9;&#x9;layout&#xA;&#x9;&#x9;&#x9;# 组合方式&#xA;&#x9;&#x9;&#x9;水平，垂直，tab&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
