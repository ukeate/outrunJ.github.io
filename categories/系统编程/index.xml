<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>系统编程 on ukeate的笔记</title>
    <link>https://ukeate.com/categories/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in 系统编程 on ukeate的笔记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 01 Aug 2022 13:53:50 +0800</lastBuildDate>
    <atom:link href="https://ukeate.com/categories/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LinuxProgram</title>
      <link>https://ukeate.com/docs/tool/linux/linux_program/</link>
      <pubDate>Thu, 11 Oct 2018 18:47:57 +0800</pubDate>
      <guid>https://ukeate.com/docs/tool/linux/linux_program/</guid>
      <description>&lt;h1 id=&#34;系统编程&#34;&gt;&#xA;  系统编程&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%b3%bb%e7%bb%9f%e7%bc%96%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;进程通信&#34;&gt;&#xA;  进程通信&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%bf%9b%e7%a8%8b%e9%80%9a%e4%bf%a1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;对象&#xA;    ipc&#xA;种类&#xA;    消息队列&#xA;    共享内存&#xA;    信号量&#xA;消息队列&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;错误处理&#34;&gt;&#xA;  错误处理&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%94%99%e8%af%af%e5%a4%84%e7%90%86&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;curedump机制, 产生core文件&#xA;命令&#xA;    ulimit&#xA;目录&#xA;    /proc/[pid]/&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;fork&#34;&gt;&#xA;  fork&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#fork&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;介绍&#xA;    子线程&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;epoll&#34;&gt;&#xA;  epoll&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#epoll&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;介绍&#xA;    多路复用io接口，提高大量并发连接中只有少量活跃情况下系统cpu利用率&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;signals&#34;&gt;&#xA;  signals&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#signals&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;介绍&#xA;    unix系统中出错时显示的错误码（通常是拼在最后）&#xA;    http://people.cs.pitt.edu/~alanjawi/cs449/code/shell/UnixSignals.htm&#xA;SIGHUP&#x9;1&#x9;Exit&#x9;Hangup&#xA;SIGINT&#x9;2&#x9;Exit&#x9;Interrupt&#xA;SIGQUIT&#x9;3&#x9;Core&#x9;Quit&#xA;SIGILL&#x9;4&#x9;Core&#x9;Illegal Instruction&#xA;SIGTRAP&#x9;5&#x9;Core&#x9;Trace/Breakpoint Trap&#xA;SIGABRT&#x9;6&#x9;Core&#x9;Abort&#xA;SIGEMT&#x9;7&#x9;Core&#x9;Emulation Trap&#xA;SIGFPE&#x9;8&#x9;Core&#x9;Arithmetic Exception&#xA;SIGKILL&#x9;9&#x9;Exit&#x9;Killed&#xA;SIGBUS&#x9;10&#x9;Core&#x9;Bus Error&#xA;SIGSEGV&#x9;11&#x9;Core&#x9;Segmentation Fault&#xA;SIGSYS&#x9;12&#x9;Core&#x9;Bad System Call&#xA;SIGPIPE&#x9;13&#x9;Exit&#x9;Broken Pipe&#xA;SIGALRM&#x9;14&#x9;Exit&#x9;Alarm Clock&#xA;SIGTERM&#x9;15&#x9;Exit&#x9;Terminated&#xA;SIGUSR1&#x9;16&#x9;Exit&#x9;User Signal 1&#xA;SIGUSR2&#x9;17&#x9;Exit&#x9;User Signal 2&#xA;SIGCHLD&#x9;18&#x9;Ignore&#x9;Child Status&#xA;SIGPWR&#x9;19&#x9;Ignore&#x9;Power Fail/Restart&#xA;SIGWINCH&#x9;20&#x9;Ignore&#x9;Window Size Change&#xA;SIGURG&#x9;21&#x9;Ignore&#x9;Urgent Socket Condition&#xA;SIGPOLL&#x9;22&#x9;Ignore&#x9;Socket I/O Possible&#xA;SIGSTOP&#x9;23&#x9;Stop&#x9;Stopped (signal)&#xA;SIGTSTP&#x9;24&#x9;Stop&#x9;Stopped (user)&#xA;SIGCONT&#x9;25&#x9;Ignore&#x9;Continued&#xA;SIGTTIN&#x9;26&#x9;Stop&#x9;Stopped (tty input)&#xA;SIGTTOU&#x9;27&#x9;Stop&#x9;Stopped (tty output)&#xA;SIGVTALRM&#x9;28&#x9;Exit&#x9;Virtual Timer Expired&#xA;SIGPROF&#x9;29&#x9;Exit&#x9;Profiling Timer Expired&#xA;SIGXCPU&#x9;30&#x9;Core&#x9;CPU time limit exceeded&#xA;SIGXFSZ&#x9;31&#x9;Core&#x9;File size limit exceeded&#xA;SIGWAITING&#x9;32&#x9;Ignore&#x9;All LWPs blocked&#xA;SIGLWP&#x9;33&#x9;Ignore&#x9;Virtual Interprocessor Interrupt for Threads Library&#xA;SIGAIO&#x9;34&#x9;Ignore&#x9;Asynchronous I/O&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;pf-kernel&#34;&gt;&#xA;  pf-kernel&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#pf-kernel&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;介绍&#xA;    是linux kernel 的fork, pf代表post-factum, 是作者的nickname&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;libev&#34;&gt;&#xA;  libev&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#libev&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;libevent&#xA;    介绍&#xA;        是linux kernel 的fork, pf代表post-factum, 是作者的nickname&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
